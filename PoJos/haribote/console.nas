[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_task_now
	EXTERN	_memman_alloc_4k
	EXTERN	_timer_alloc
	EXTERN	_timer_init
	EXTERN	_timer_settime
	EXTERN	_file_readfat
	EXTERN	_io_cli
	EXTERN	_fifo32_status
	EXTERN	_fifo32_get
	EXTERN	_io_sti
	EXTERN	_boxfill8
	EXTERN	_sheet_refresh
	EXTERN	_task_sleep
	EXTERN	_putfonts8_asc_sht
	EXTERN	_shutdown
	EXTERN	_memman_total
	EXTERN	_sprintf
	EXTERN	_timer_cancel
	EXTERN	_memman_free_4k
	EXTERN	_fifo32_put
	EXTERN	_taskctl
	EXTERN	_open_console
	EXTERN	_sheet_slide
	EXTERN	_sheet_updown
	EXTERN	_open_constask
	EXTERN	_file_search
	EXTERN	_file_loadfile2
	EXTERN	_set_segmdesc
	EXTERN	_start_app
	EXTERN	_timer_cancelall
	EXTERN	_sheet_free
	EXTERN	_get_rtc_register
	EXTERN	_io_in8
	EXTERN	_io_out8
	EXTERN	_timer_free
	EXTERN	_memman_free
	EXTERN	_memman_alloc
	EXTERN	_memman_init
	EXTERN	_putfonts8_asc
	EXTERN	_sheet_alloc
	EXTERN	_sheet_setbuf
	EXTERN	_make_window8
[FILE "console.c"]
[SECTION .text]
	GLOBAL	_console_task
_console_task:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,168
	MOV	EBX,DWORD [8+EBP]
	CALL	_task_now
	PUSH	11520
	MOV	EDI,EAX
	PUSH	3932160
	CALL	_memman_alloc_4k
	TEST	EBX,EBX
	MOV	DWORD [-44+EBP],EBX
	MOV	DWORD [-176+EBP],EAX
	LEA	EAX,DWORD [-44+EBP]
	MOV	DWORD [164+EDI],EAX
	LEA	EAX,DWORD [-172+EBP]
	MOV	DWORD [184+EDI],EAX
	POP	ECX
	MOV	DWORD [-40+EBP],8
	MOV	DWORD [-36+EBP],28
	MOV	DWORD [-32+EBP],-1
	POP	ESI
	JE	L2
	CALL	_timer_alloc
	LEA	EDX,DWORD [16+EDI]
	PUSH	1
	PUSH	EDX
	MOV	DWORD [-28+EBP],EAX
	PUSH	EAX
	CALL	_timer_init
	PUSH	50
	PUSH	DWORD [-28+EBP]
	CALL	_timer_settime
	ADD	ESP,20
L2:
	PUSH	1049088
	MOV	ESI,7
	PUSH	DWORD [-176+EBP]
	CALL	_file_readfat
	POP	EAX
	POP	EDX
	XOR	EAX,EAX
L7:
	MOV	DWORD [-140+EBP+EAX*1],0
	ADD	EAX,12
	DEC	ESI
	JNS	L7
	LEA	EAX,DWORD [-140+EBP]
	MOV	DWORD [176+EDI],EAX
	MOV	EAX,DWORD [-176+EBP]
	MOV	DWORD [180+EDI],EAX
	LEA	EAX,DWORD [-44+EBP]
	MOV	BYTE [189+EDI],0
	MOV	BYTE [188+EDI],2
	PUSH	1
	PUSH	62
	PUSH	EAX
	CALL	_cons_putchar
	ADD	ESP,12
L10:
	LEA	EBX,DWORD [16+EDI]
	CALL	_io_cli
	PUSH	EBX
	CALL	_fifo32_status
	POP	ESI
	TEST	EAX,EAX
	JE	L38
	PUSH	EBX
	CALL	_fifo32_get
	MOV	ESI,EAX
	CALL	_io_sti
	POP	ECX
	CMP	ESI,1
	JLE	L39
L15:
	CMP	ESI,2
	JE	L40
L20:
	CMP	ESI,3
	JE	L41
L21:
	CMP	ESI,4
	JE	L42
L23:
	LEA	ECX,DWORD [-256+ESI]
	MOV	DWORD [-180+EBP],ECX
	CMP	ECX,255
	JA	L24
	CMP	ESI,264
	JE	L43
	CMP	ESI,266
	JE	L44
	MOV	ECX,DWORD [-40+EBP]
	CMP	ECX,239
	JG	L24
	MOV	EAX,ECX
	MOV	EDX,8
	MOV	EBX,EDX
	PUSH	1
	CDQ
	IDIV	EBX
	MOV	ECX,EAX
	MOV	EAX,ESI
	MOV	BYTE [-174+EBP+ECX*1],AL
	LEA	EAX,DWORD [-44+EBP]
	PUSH	DWORD [-180+EBP]
	PUSH	EAX
L36:
	CALL	_cons_putchar
L37:
	ADD	ESP,12
L24:
	MOV	EBX,DWORD [-44+EBP]
	TEST	EBX,EBX
	JE	L10
	MOV	ESI,DWORD [-32+EBP]
	TEST	ESI,ESI
	JS	L33
	MOV	ECX,DWORD [-36+EBP]
	MOV	EDX,DWORD [-40+EBP]
	LEA	EAX,DWORD [15+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [7+EDX]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	ESI
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_boxfill8
	ADD	ESP,28
L33:
	MOV	ECX,DWORD [-36+EBP]
	MOV	EDX,DWORD [-40+EBP]
	LEA	EAX,DWORD [16+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [8+EDX]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	DWORD [-44+EBP]
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L10
L44:
	PUSH	0
	LEA	EBX,DWORD [-44+EBP]
	PUSH	32
	PUSH	EBX
	CALL	_cons_putchar
	PUSH	EBX
	MOV	EAX,DWORD [-40+EBP]
	MOV	EDX,8
	MOV	ECX,EDX
	CDQ
	IDIV	ECX
	MOV	BYTE [-174+EBP+EAX*1],0
	CALL	_cons_newline
	LEA	EAX,DWORD [-172+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [-176+EBP]
	PUSH	EBX
	PUSH	EAX
	CALL	_cons_runcmd
	ADD	ESP,32
	CMP	DWORD [-44+EBP],0
	JNE	L29
	PUSH	DWORD [-176+EBP]
	PUSH	EBX
	CALL	_cmd_exit
	POP	EAX
	POP	EDX
L29:
	PUSH	1
	PUSH	62
	PUSH	EBX
	JMP	L36
L43:
	CMP	DWORD [-40+EBP],16
	JLE	L24
	PUSH	0
	LEA	EAX,DWORD [-44+EBP]
	PUSH	32
	PUSH	EAX
	CALL	_cons_putchar
	SUB	DWORD [-40+EBP],8
	JMP	L37
L42:
	PUSH	DWORD [-176+EBP]
	LEA	EAX,DWORD [-44+EBP]
	PUSH	EAX
	CALL	_cmd_exit
	POP	ECX
	POP	EBX
	JMP	L23
L41:
	MOV	EBX,DWORD [-44+EBP]
	TEST	EBX,EBX
	JE	L22
	MOV	ECX,DWORD [-36+EBP]
	MOV	EDX,DWORD [-40+EBP]
	LEA	EAX,DWORD [15+ECX]
	PUSH	EAX
	LEA	EAX,DWORD [7+EDX]
	PUSH	EAX
	PUSH	ECX
	PUSH	EDX
	PUSH	0
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	CALL	_boxfill8
	ADD	ESP,28
L22:
	MOV	DWORD [-32+EBP],-1
	JMP	L21
L40:
	MOV	DWORD [-32+EBP],16777215
	JMP	L20
L39:
	CMP	DWORD [-44+EBP],0
	JE	L15
	TEST	ESI,ESI
	JE	L16
	PUSH	0
	PUSH	EBX
	PUSH	DWORD [-28+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-32+EBP],0
	JS	L18
	MOV	DWORD [-32+EBP],16777215
L18:
	PUSH	50
	PUSH	DWORD [-28+EBP]
	CALL	_timer_settime
	POP	EAX
	POP	EDX
	JMP	L15
L16:
	PUSH	1
	PUSH	EBX
	PUSH	DWORD [-28+EBP]
	CALL	_timer_init
	ADD	ESP,12
	CMP	DWORD [-32+EBP],0
	JS	L18
	MOV	DWORD [-32+EBP],0
	JMP	L18
L38:
	PUSH	EDI
	CALL	_task_sleep
	CALL	_io_sti
	POP	EBX
	JMP	L10
[SECTION .data]
LC0:
	DB	" ",0x00
[SECTION .text]
	GLOBAL	_cons_putchar
_cons_putchar:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	MOV	DL,BYTE [16+EBP]
	MOV	EBX,DWORD [8+EBP]
	MOV	BYTE [-7+EBP],DL
	MOV	BYTE [-6+EBP],AL
	CMP	AL,9
	MOV	BYTE [-5+EBP],0
	JE	L47
	CMP	AL,10
	JE	L61
	CMP	AL,13
	JE	L45
	MOV	EDX,DWORD [EBX]
	TEST	EDX,EDX
	JNE	L62
L58:
	CMP	BYTE [-7+EBP],0
	JE	L45
	MOV	EAX,DWORD [4+EBX]
	ADD	EAX,8
	MOV	DWORD [4+EBX],EAX
	CMP	EAX,520
	JE	L61
L45:
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
L61:
	PUSH	EBX
	CALL	_cons_newline
	POP	EAX
	JMP	L45
L62:
	PUSH	1
	LEA	EAX,DWORD [-6+EBP]
	PUSH	EAX
	PUSH	0
	PUSH	16777215
	PUSH	DWORD [8+EBX]
	PUSH	DWORD [4+EBX]
	PUSH	EDX
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	JMP	L58
L47:
	MOV	EAX,DWORD [EBX]
	TEST	EAX,EAX
	JNE	L63
L50:
	MOV	EAX,DWORD [4+EBX]
	ADD	EAX,8
	MOV	DWORD [4+EBX],EAX
	CMP	EAX,520
	JE	L64
L51:
	MOV	EAX,DWORD [4+EBX]
	SUB	EAX,8
	AND	EAX,31
	JNE	L47
	JMP	L45
L64:
	PUSH	EBX
	CALL	_cons_newline
	POP	EAX
	JMP	L51
L63:
	PUSH	1
	PUSH	LC0
	PUSH	0
	PUSH	16777215
	PUSH	DWORD [8+EBX]
	PUSH	DWORD [4+EBX]
	PUSH	EAX
	CALL	_putfonts8_asc_sht
	ADD	ESP,28
	JMP	L50
	GLOBAL	_cons_newline
_cons_newline:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,12
	MOV	EAX,DWORD [8+EBP]
	MOV	EAX,DWORD [EAX]
	MOV	DWORD [-16+EBP],EAX
	CALL	_task_now
	MOV	EDX,DWORD [8+EBP]
	MOV	DWORD [-20+EBP],EAX
	MOV	EAX,DWORD [8+EDX]
	CMP	EAX,459
	JG	L66
	ADD	EAX,16
	MOV	DWORD [8+EDX],EAX
L67:
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [-20+EBP]
	MOV	DWORD [4+EAX],8
	CMP	BYTE [188+EDX],1
	JE	L98
L65:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L98:
	CMP	BYTE [189+EDX],0
	JE	L65
	MOV	DWORD [4+EAX],16
	JMP	L65
L66:
	CMP	DWORD [-16+EBP],0
	JE	L67
	MOV	ESI,28
L78:
	MOV	EAX,DWORD [-16+EBP]
	MOV	EBX,8
	MOV	EAX,DWORD [EAX]
	MOV	DWORD [-24+EBP],EAX
L77:
	MOV	EDX,DWORD [-16+EBP]
	LEA	EAX,DWORD [16+ESI]
	MOV	EDI,DWORD [-24+EBP]
	MOV	ECX,DWORD [4+EDX]
	MOV	EDX,ESI
	IMUL	EAX,ECX
	IMUL	EDX,ECX
	LEA	EAX,DWORD [EAX+EBX*1]
	LEA	EDX,DWORD [EDX+EBX*1]
	INC	EBX
	MOV	EAX,DWORD [EDI+EAX*4]
	CMP	EBX,519
	MOV	DWORD [EDI+EDX*4],EAX
	JLE	L77
	INC	ESI
	CMP	ESI,459
	JLE	L78
	MOV	ESI,460
L88:
	MOV	EBX,8
L87:
	MOV	EDX,DWORD [-16+EBP]
	MOV	EAX,ESI
	IMUL	EAX,DWORD [4+EDX]
	LEA	EAX,DWORD [EAX+EBX*1]
	INC	EBX
	CMP	EBX,519
	MOV	DWORD [EDI+EAX*4],0
	JLE	L87
	INC	ESI
	CMP	ESI,475
	JLE	L88
	PUSH	476
	PUSH	520
	PUSH	28
	PUSH	8
	PUSH	EDX
	CALL	_sheet_refresh
	ADD	ESP,20
	JMP	L67
	GLOBAL	_cons_putstr0
_cons_putstr0:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [8+EBP]
	CMP	BYTE [EBX],0
	JNE	L104
L106:
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	RET
L104:
	PUSH	1
	MOVSX	EAX,BYTE [EBX]
	PUSH	EAX
	INC	EBX
	PUSH	ESI
	CALL	_cons_putchar
	ADD	ESP,12
	CMP	BYTE [EBX],0
	JNE	L104
	JMP	L106
	GLOBAL	_cons_putstr1
_cons_putstr1:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	MOV	ESI,DWORD [16+EBP]
	XOR	EBX,EBX
	MOV	EDI,DWORD [12+EBP]
	CMP	EBX,ESI
	JL	L112
L114:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L112:
	PUSH	1
	MOVSX	EAX,BYTE [EBX+EDI*1]
	PUSH	EAX
	INC	EBX
	PUSH	DWORD [8+EBP]
	CALL	_cons_putchar
	ADD	ESP,12
	CMP	EBX,ESI
	JL	L112
	JMP	L114
[SECTION .data]
LC1:
	DB	"mem",0x00
LC2:
	DB	"cls",0x00
LC3:
	DB	"dir",0x00
LC4:
	DB	"exit",0x00
LC5:
	DB	"about",0x00
LC6:
	DB	"start ",0x00
LC7:
	DB	"ncst",0x00
LC8:
	DB	"langmode ",0x00
LC9:
	DB	"shutdown",0x00
LC10:
	DB	0xC4,0xFA,0xCA,0xE4,0xC8,0xEB,0xC3,0xFC,0xC1,0xEE,0xB5,0xC4,0xBC,0xC8,0xB2,0xBB,0xCA,0xC7,"Pojos",0xC4,0xDA,0xB2,0xBF,0xD6,0xB8,0xC1,0xEE,0xA3,0xAC,0xD2,0xB2,0xB2,0xBB,0xCA,0xC7,0xCD,0xE2,0xB2,0xBF,0xB3,0xCC,0xD0,0xF2,0xA1,0xA3,0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cons_runcmd
_cons_runcmd:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,LC1
	PUSH	EBX
	SUB	ESP,12
	MOV	EAX,DWORD [8+EBP]
	MOV	ECX,DWORD [16+EBP]
	MOV	DWORD [-24+EBP],EAX
	MOV	DWORD [-16+EBP],ECX
	MOV	EAX,DWORD [20+EBP]
	MOV	ESI,DWORD [-24+EBP]
	MOV	DWORD [-20+EBP],EAX
	MOV	EBX,DWORD [12+EBP]
	MOV	EAX,4
	CLD
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L116
	CMP	DWORD [EBX],0
	JNE	L136
L116:
	MOV	EAX,4
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC2
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L118
	CMP	DWORD [EBX],0
	JNE	L137
L118:
	MOV	EAX,4
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC3
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L120
	CMP	DWORD [EBX],0
	JNE	L138
L120:
	MOV	EAX,5
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC4
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L139
	MOV	EAX,6
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC5
	MOV	ECX,EAX
	REPE
	CMPSB
	JNE	L124
	CMP	DWORD [EBX],0
	JNE	L140
L124:
	MOV	EAX,6
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC6
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L141
	MOV	EAX,5
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC7
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L142
	MOV	EAX,9
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC8
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L143
	MOV	EAX,9
	MOV	ESI,DWORD [-24+EBP]
	CLD
	MOV	EDI,LC9
	MOV	ECX,EAX
	REPE
	CMPSB
	JE	L144
	MOV	EAX,DWORD [-24+EBP]
	CMP	BYTE [EAX],0
	JNE	L145
L115:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L145:
	PUSH	EAX
	PUSH	DWORD [-16+EBP]
	PUSH	EBX
	CALL	_cmd_app
	ADD	ESP,12
	TEST	EAX,EAX
	JNE	L115
	MOV	DWORD [12+EBP],LC10
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_putstr0
L144:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_shutdown
L143:
	MOV	EAX,DWORD [-24+EBP]
	MOV	DWORD [8+EBP],EBX
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_langmode
L142:
	MOV	EAX,DWORD [-20+EBP]
	MOV	ECX,DWORD [-24+EBP]
	MOV	DWORD [16+EBP],EAX
	MOV	DWORD [12+EBP],ECX
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_ncst
L141:
	MOV	EAX,DWORD [-20+EBP]
	MOV	ECX,DWORD [-24+EBP]
	MOV	DWORD [16+EBP],EAX
	MOV	DWORD [12+EBP],ECX
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_start
L140:
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_about
L139:
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBP],EBX
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_exit
L138:
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_dir
L137:
	MOV	DWORD [8+EBP],EBX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_cls
L136:
	MOV	EAX,DWORD [-20+EBP]
	MOV	DWORD [8+EBP],EBX
	MOV	DWORD [12+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cmd_mem
[SECTION .data]
LC11:
	DB	0x0A,0xC4,0xDA,0xB4,0xE6,0xD7,0xDC,0xC1,0xBF,0xA3,0xBA,"  %dMB",0x0A,0xBF,0xC9,0xD3,0xC3,0xC4,0xDA,0xB4,0xE6,0xA3,0xBA,"  %dMB",0x0A,0xD2,0xD1,0xD3,0xC3,0xC4,0xDA,0xB4,0xE6,0xA3,0xBA,"  %dMB",0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_mem
_cmd_mem:
	PUSH	EBP
	MOV	EDX,1048576
	MOV	EBP,ESP
	MOV	ECX,EDX
	PUSH	EBX
	SUB	ESP,64
	MOV	EAX,DWORD [12+EBP]
	CDQ
	IDIV	ECX
	PUSH	3932160
	MOV	EBX,EAX
	CALL	_memman_total
	MOV	EDX,EBX
	SHR	EAX,20
	SUB	EDX,EAX
	PUSH	EDX
	PUSH	3932160
	CALL	_memman_total
	SHR	EAX,20
	MOV	DWORD [ESP],EAX
	PUSH	EBX
	PUSH	LC11
	LEA	EBX,DWORD [-68+EBP]
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	DWORD [8+EBP]
	CALL	_cons_putstr0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
	GLOBAL	_cmd_cls
_cmd_cls:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	EDI,DWORD [8+EBP]
	PUSH	EBX
	MOV	EBX,28
	MOV	ECX,DWORD [EDI]
L157:
	MOV	EDX,8
	MOV	ESI,DWORD [ECX]
L156:
	MOV	EAX,EBX
	IMUL	EAX,DWORD [4+ECX]
	LEA	EAX,DWORD [EAX+EDX*1]
	INC	EDX
	CMP	EDX,519
	MOV	DWORD [ESI+EAX*4],0
	JLE	L156
	INC	EBX
	CMP	EBX,475
	JLE	L157
	PUSH	476
	PUSH	520
	PUSH	28
	PUSH	8
	PUSH	ECX
	CALL	_sheet_refresh
	MOV	DWORD [8+EDI],28
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC14:
	DB	"                ext",0xCE,0xC4,0xBC,0xFE,"       %7d",0xD7,0xD6,0xBD,0xDA,0x0A,0x00
LC12:
	DB	0x0A,0xCE,0xC4,0xBC,0xFE,0xB9,0xFD,0xB6,0xE0,0xA3,0xAC,0xC7,0xEB,0xB0,0xB4,0xC8,0xCE,0xD2,0xE2,0xBC,0xFC,0xBC,0xCC,0xD0,0xF8,0xB2,0xE9,0xBF,0xB4,0xA1,0xA3,0x00
LC13:
	DB	0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_dir
_cmd_dir:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	EDI,EDI
	PUSH	EBX
	XOR	EBX,EBX
	SUB	ESP,72
	MOV	ESI,DWORD [8+EBP]
	CALL	_task_now
	MOV	DWORD [-84+EBP],0
	MOV	DWORD [-80+EBP],EAX
L181:
	CMP	DWORD [-84+EBP],400
	JG	L184
L167:
	MOV	AL,BYTE [1058304+EBX]
	TEST	AL,AL
	JE	L164
	CMP	AL,-27
	JE	L165
	TEST	BYTE [1058315+EBX],24
	JE	L185
L165:
	INC	EDI
	ADD	EBX,32
	CMP	EDI,223
	JLE	L181
L164:
	PUSH	ESI
	CALL	_cons_newline
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L185:
	PUSH	DWORD [1058332+EBX]
	PUSH	LC14
	LEA	EAX,DWORD [-76+EBP]
	PUSH	EAX
	ADD	DWORD [-84+EBP],16
	CALL	_sprintf
	ADD	ESP,12
	XOR	EDX,EDX
L180:
	MOV	AL,BYTE [1058304+EBX+EDX*1]
	MOV	BYTE [-76+EBP+EDX*1],AL
	TEST	AL,AL
	JE	L176
	INC	EDX
	CMP	EDX,7
	JLE	L180
L176:
	MOV	BYTE [-76+EBP+EDX*1],46
	MOV	AL,BYTE [1058312+EBX]
	MOV	BYTE [-75+EBP+EDX*1],AL
	MOV	AL,BYTE [1058313+EBX]
	MOV	BYTE [-74+EBP+EDX*1],AL
	MOV	AL,BYTE [1058314+EBX]
	MOV	BYTE [-73+EBP+EDX*1],AL
	MOV	AL,BYTE [1058312+EBX]
	MOV	BYTE [-60+EBP],AL
	MOV	AL,BYTE [1058313+EBX]
	MOV	BYTE [-59+EBP],AL
	MOV	AL,BYTE [1058314+EBX]
	MOV	BYTE [-58+EBP],AL
	LEA	EAX,DWORD [-76+EBP]
	PUSH	EAX
	PUSH	ESI
	CALL	_cons_putstr0
	POP	EAX
	POP	EDX
	JMP	L165
L184:
	PUSH	LC12
	PUSH	ESI
	CALL	_cons_putstr0
	POP	ECX
	POP	EAX
L168:
	MOV	EAX,DWORD [-80+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_get
	POP	EDX
	SUB	EAX,256
	CMP	EAX,255
	JA	L168
	PUSH	LC13
	PUSH	ESI
	CALL	_cons_putstr0
	POP	ECX
	MOV	DWORD [-84+EBP],0
	POP	EAX
	JMP	L167
	GLOBAL	_cmd_exit
_cmd_exit:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EBX
	MOV	EBX,DWORD [8+EBP]
	CALL	_task_now
	MOV	ESI,DWORD [4068]
	MOV	EDI,DWORD [4076]
	MOV	DWORD [-16+EBP],EAX
	CMP	DWORD [EBX],0
	JE	L187
	PUSH	DWORD [16+EBX]
	CALL	_timer_cancel
	POP	ECX
L187:
	PUSH	11520
	PUSH	DWORD [12+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	CALL	_io_cli
	MOV	EAX,DWORD [EBX]
	ADD	ESP,12
	TEST	EAX,EAX
	JE	L188
	SUB	EAX,ESI
	SUB	EAX,1044
	SAR	EAX,3
	IMUL	EAX,EAX,-858993459
	ADD	EAX,768
L193:
	PUSH	EAX
	PUSH	EDI
	CALL	_fifo32_put
	POP	EAX
	POP	EDX
	CALL	_io_sti
L190:
	PUSH	DWORD [-16+EBP]
	CALL	_task_sleep
	POP	EAX
	JMP	L190
L188:
	MOV	EAX,DWORD [-16+EBP]
	SUB	EAX,DWORD [_taskctl]
	SUB	EAX,4088
	SAR	EAX,6
	IMUL	EAX,EAX,-1431655765
	ADD	EAX,1024
	JMP	L193
	GLOBAL	_cmd_start
_cmd_start:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ECX
	PUSH	ECX
	MOV	EAX,DWORD [8+EBP]
	MOV	EDI,DWORD [12+EBP]
	MOV	ESI,DWORD [4068]
	MOV	DWORD [-16+EBP],EAX
	PUSH	DWORD [16+EBP]
	PUSH	ESI
	CALL	_open_console
	MOV	EBX,EAX
	MOV	EAX,DWORD [36+EAX]
	ADD	EAX,16
	MOV	DWORD [-20+EBP],EAX
	PUSH	4
	PUSH	32
	PUSH	EBX
	CALL	_sheet_slide
	PUSH	DWORD [16+ESI]
	PUSH	EBX
	MOV	EBX,6
	CALL	_sheet_updown
	ADD	ESP,28
	CMP	BYTE [6+EDI],0
	JNE	L199
L201:
	PUSH	266
	PUSH	DWORD [-20+EBP]
	CALL	_fifo32_put
	MOV	EAX,DWORD [-16+EBP]
	POP	ESI
	POP	EDI
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_newline
L199:
	MOVSX	EAX,BYTE [EBX+EDI*1]
	ADD	EAX,256
	INC	EBX
	PUSH	EAX
	PUSH	DWORD [-20+EBP]
	CALL	_fifo32_put
	CMP	BYTE [EBX+EDI*1],0
	POP	EAX
	POP	EDX
	JNE	L199
	JMP	L201
	GLOBAL	_cmd_ncst
_cmd_ncst:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	MOV	ESI,5
	PUSH	EBX
	PUSH	EAX
	MOV	EAX,DWORD [8+EBP]
	MOV	EBX,DWORD [12+EBP]
	MOV	DWORD [-16+EBP],EAX
	PUSH	DWORD [16+EBP]
	PUSH	0
	CALL	_open_constask
	POP	ECX
	CMP	BYTE [5+EBX],0
	LEA	EDI,DWORD [16+EAX]
	POP	EAX
	JNE	L207
L209:
	PUSH	266
	PUSH	EDI
	CALL	_fifo32_put
	MOV	EAX,DWORD [-16+EBP]
	POP	EBX
	POP	ESI
	MOV	DWORD [8+EBP],EAX
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	JMP	_cons_newline
L207:
	MOVSX	EAX,BYTE [ESI+EBX*1]
	ADD	EAX,256
	INC	ESI
	PUSH	EAX
	PUSH	EDI
	CALL	_fifo32_put
	CMP	BYTE [ESI+EBX*1],0
	POP	EAX
	POP	EDX
	JNE	L207
	JMP	L209
[SECTION .data]
LC15:
	DB	0xC4,0xA3,0xCA,0xBD,0xB2,0xBB,0xB4,0xE6,0xD4,0xDA,".",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_langmode
_cmd_langmode:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	MOV	EBX,DWORD [12+EBP]
	MOV	ESI,DWORD [8+EBP]
	CALL	_task_now
	MOV	DL,BYTE [9+EBX]
	SUB	EDX,48
	CMP	DL,2
	JA	L211
	MOV	BYTE [188+EAX],DL
L212:
	MOV	DWORD [8+EBP],ESI
	LEA	ESP,DWORD [-8+EBP]
	POP	EBX
	POP	ESI
	POP	EBP
	JMP	_cons_newline
L211:
	PUSH	LC15
	PUSH	ESI
	CALL	_cons_putstr0
	POP	EAX
	POP	EDX
	JMP	L212
[SECTION .data]
LC16:
	DB	0x0A,0x00
LC17:
	DB	"PoJos-os,ver1.0.0-pre1",0x0A,0x00
LC18:
	DB	"Copyright (C) 2018-2020 PanJ",0x0A,0x00
LC19:
	DB	0xB2,0xE2,0xCA,0xD4,0xB0,0xE6,0x0A,0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_about
_cmd_about:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EBX
	PUSH	LC16
	MOV	EBX,DWORD [8+EBP]
	PUSH	EBX
	CALL	_cons_putstr0
	PUSH	LC17
	PUSH	EBX
	CALL	_cons_putstr0
	PUSH	LC18
	PUSH	EBX
	CALL	_cons_putstr0
	PUSH	LC19
	PUSH	EBX
	CALL	_cons_putstr0
	MOV	EBX,DWORD [-4+EBP]
	LEAVE
	RET
[SECTION .data]
LC20:
	DB	"Hari",0x00
LC21:
	DB	0xD5,0xE2,0xB8,0xF6," *.hrb ",0xCE,0xC4,0xBC,0xFE,0xB8,0xF1,0xCA,0xBD,0xB2,0xBB,0xB7,0xFB,0xBA,0xCF,0xB9,0xE6,0xB7,0xB6,0xA3,0xAC,0xB2,0xBB,0xC4,0xDC,0xB4,0xF2,0xBF,0xAA,".",0x0A,0x00
[SECTION .text]
	GLOBAL	_cmd_app
_cmd_app:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	XOR	ESI,ESI
	PUSH	EBX
	SUB	ESP,52
	MOV	EBX,DWORD [16+EBP]
	CALL	_task_now
	MOV	DWORD [-56+EBP],EAX
L220:
	MOV	AL,BYTE [ESI+EBX*1]
	CMP	AL,32
	JLE	L216
	MOV	BYTE [-44+EBP+ESI*1],AL
	INC	ESI
	CMP	ESI,12
	JLE	L220
L216:
	PUSH	224
	LEA	EBX,DWORD [-44+EBP]
	PUSH	1058304
	PUSH	EBX
	MOV	BYTE [-44+EBP+ESI*1],0
	CALL	_file_search
	ADD	ESP,12
	MOV	EDX,EAX
	TEST	EAX,EAX
	JE	L250
L249:
	MOV	EAX,DWORD [28+EDX]
	MOV	DWORD [-48+EBP],EAX
	LEA	EAX,DWORD [-48+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EAX
	MOVZX	EAX,WORD [26+EDX]
	PUSH	EAX
	CALL	_file_loadfile2
	ADD	ESP,12
	CMP	DWORD [-48+EBP],35
	MOV	DWORD [-52+EBP],EAX
	JLE	L223
	MOV	ESI,EAX
	MOV	EDI,LC20
	CLD
	ADD	ESI,4
	MOV	ECX,4
	REPE
	CMPSB
	JNE	L223
	MOV	EAX,DWORD [-52+EBP]
	CMP	BYTE [EAX],0
	JE	L251
L223:
	PUSH	LC21
	PUSH	DWORD [8+EBP]
	CALL	_cons_putstr0
	POP	ECX
	POP	EBX
L241:
	PUSH	DWORD [-48+EBP]
	PUSH	DWORD [-52+EBP]
	PUSH	3932160
	CALL	_memman_free_4k
	PUSH	DWORD [8+EBP]
	CALL	_cons_newline
	MOV	EAX,1
L214:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L251:
	MOV	EDX,DWORD [EAX]
	MOV	EAX,DWORD [12+EAX]
	MOV	DWORD [-60+EBP],EDX
	MOV	DWORD [-64+EBP],EAX
	MOV	EDX,DWORD [-52+EBP]
	MOV	EBX,DWORD [16+EDX]
	MOV	ESI,DWORD [20+EDX]
	PUSH	DWORD [-60+EBP]
	PUSH	3932160
	CALL	_memman_alloc_4k
	MOV	EDI,EAX
	MOV	EAX,DWORD [-56+EBP]
	MOV	DWORD [168+EAX],EDI
	MOV	EAX,DWORD [-48+EBP]
	PUSH	16634
	DEC	EAX
	PUSH	DWORD [-52+EBP]
	PUSH	EAX
	MOV	EAX,DWORD [-56+EBP]
	ADD	EAX,148
	PUSH	EAX
	CALL	_set_segmdesc
	MOV	EAX,DWORD [-60+EBP]
	PUSH	16626
	DEC	EAX
	PUSH	EDI
	PUSH	EAX
	MOV	EAX,DWORD [-56+EBP]
	ADD	EAX,156
	PUSH	EAX
	CALL	_set_segmdesc
	ADD	ESP,40
	TEST	EBX,EBX
	JLE	L244
	MOV	EAX,DWORD [-52+EBP]
	MOV	ECX,DWORD [-64+EBP]
	ADD	ECX,EDI
	LEA	EDX,DWORD [EAX+ESI*1]
	MOV	ESI,EBX
L228:
	MOV	AL,BYTE [EDX]
	INC	EDX
	MOV	BYTE [ECX],AL
	INC	ECX
	DEC	ESI
	JNE	L228
L244:
	MOV	EAX,DWORD [-56+EBP]
	MOV	ESI,255
	ADD	EAX,48
	PUSH	EAX
	PUSH	12
	PUSH	DWORD [-64+EBP]
	PUSH	4
	PUSH	27
	CALL	_start_app
	MOV	EBX,DWORD [4068]
	ADD	ESP,20
	ADD	EBX,1044
L234:
	MOV	EAX,DWORD [28+EBX]
	AND	EAX,17
	CMP	EAX,17
	JE	L252
L231:
	ADD	EBX,40
	DEC	ESI
	JNS	L234
	XOR	EBX,EBX
	MOV	ESI,7
L240:
	MOV	EDX,DWORD [-56+EBP]
	MOV	EAX,DWORD [176+EDX]
	CMP	DWORD [EAX+EBX*1],0
	JNE	L253
L237:
	ADD	EBX,12
	DEC	ESI
	JNS	L240
	MOV	EAX,DWORD [-56+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_timer_cancelall
	PUSH	DWORD [-60+EBP]
	PUSH	EDI
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,16
	MOV	EAX,DWORD [-56+EBP]
	MOV	BYTE [189+EAX],0
	JMP	L241
L253:
	PUSH	DWORD [4+EAX+EBX*1]
	MOV	EAX,DWORD [176+EDX]
	PUSH	DWORD [EAX+EBX*1]
	PUSH	3932160
	CALL	_memman_free_4k
	ADD	ESP,12
	MOV	EDX,DWORD [-56+EBP]
	MOV	EAX,DWORD [176+EDX]
	MOV	DWORD [EAX+EBX*1],0
	JMP	L237
L252:
	MOV	EDX,DWORD [-56+EBP]
	CMP	DWORD [36+EBX],EDX
	JNE	L231
	PUSH	EBX
	CALL	_sheet_free
	POP	EAX
	JMP	L231
L250:
	CMP	BYTE [-45+EBP+ESI*1],46
	JE	L221
	PUSH	224
	PUSH	1058304
	PUSH	EBX
	MOV	BYTE [-44+EBP+ESI*1],46
	MOV	BYTE [-43+EBP+ESI*1],72
	MOV	BYTE [-42+EBP+ESI*1],82
	MOV	BYTE [-41+EBP+ESI*1],66
	MOV	BYTE [-40+EBP+ESI*1],0
	CALL	_file_search
	ADD	ESP,12
	MOV	EDX,EAX
L221:
	TEST	EDX,EDX
	JNE	L249
	XOR	EAX,EAX
	JMP	L214
	GLOBAL	_hrb_api
_hrb_api:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	SUB	ESP,24
	MOV	ESI,DWORD [28+EBP]
	CALL	_task_now
	MOV	ECX,DWORD [4068]
	MOV	EDI,DWORD [4076]
	MOV	DWORD [-16+EBP],EAX
	MOV	DWORD [-24+EBP],ECX
	MOV	EDX,DWORD [-16+EBP]
	MOV	EAX,DWORD [168+EAX]
	MOV	DWORD [-20+EBP],EAX
	MOV	DWORD [-28+EBP],EDI
	MOV	EBX,DWORD [164+EDX]
	CMP	ESI,1
	JE	L374
	CMP	ESI,2
	JE	L375
	CMP	ESI,3
	JE	L376
	CMP	ESI,4
	JE	L377
	CMP	ESI,5
	JE	L378
	CMP	ESI,6
	JE	L379
	CMP	ESI,7
	JE	L380
	CMP	ESI,8
	JE	L381
	CMP	ESI,9
	JE	L382
	CMP	ESI,10
	JE	L383
	CMP	ESI,11
	JE	L384
	CMP	ESI,12
	JE	L385
	CMP	ESI,13
	JE	L386
	CMP	ESI,14
	JE	L387
	CMP	ESI,15
	JE	L290
	CMP	ESI,16
	JE	L388
	CMP	ESI,17
	JE	L389
	CMP	ESI,18
	JE	L390
	CMP	ESI,19
	JE	L391
	CMP	ESI,20
	JE	L392
	CMP	ESI,21
	JE	L393
	CMP	ESI,22
	JE	L394
	CMP	ESI,23
	JE	L395
	CMP	ESI,24
	JE	L396
	CMP	ESI,25
	JE	L397
	CMP	ESI,26
	JE	L398
	CMP	ESI,27
	JE	L399
	CMP	ESI,28
	JE	L360
L256:
	XOR	EAX,EAX
L254:
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L360:
	PUSH	10
	CALL	_get_rtc_register
	POP	ECX
	TEST	AL,AL
	JS	L360
	MOVSX	EAX,BYTE [36+EBP]
	PUSH	EAX
	CALL	_get_rtc_register
	PUSH	11
	MOV	ESI,EAX
	CALL	_get_rtc_register
	MOV	EBX,EAX
	POP	EAX
	POP	EDX
	TEST	EBX,4
	JNE	L363
	MOV	EDI,ESI
	MOV	EAX,ESI
	AND	EDI,15
	MOV	EDX,16
	MOV	DWORD [-36+EBP],EDI
	MOV	EDI,EDX
	CDQ
	IDIV	EDI
	IMUL	EDX,EAX,10
	MOV	ESI,DWORD [-36+EBP]
	ADD	ESI,EDX
L363:
	CMP	DWORD [36+EBP],4
	JE	L400
L364:
	MOV	DWORD [68+EBP],ESI
	JMP	L256
L400:
	AND	EBX,2
	JNE	L364
	MOV	EAX,ESI
	TEST	AL,AL
	JNS	L364
	AND	ESI,127
	MOV	ECX,24
	LEA	EAX,DWORD [12+ESI]
	CDQ
	IDIV	ECX
	MOV	ESI,EDX
	JMP	L364
L399:
	MOV	EBX,DWORD [-16+EBP]
	MOVZX	EAX,BYTE [188+EBX]
L367:
	MOV	DWORD [68+EBP],EAX
	JMP	L256
L398:
	XOR	ESI,ESI
L351:
	MOV	ECX,DWORD [-16+EBP]
	MOV	EDX,DWORD [24+EBP]
	ADD	EDX,DWORD [-20+EBP]
	MOV	EAX,DWORD [184+ECX]
	MOV	AL,BYTE [ESI+EAX*1]
	MOV	BYTE [ESI+EDX*1],AL
	MOV	EAX,DWORD [184+ECX]
	CMP	BYTE [ESI+EAX*1],0
	JE	L364
	CMP	ESI,DWORD [32+EBP]
	JGE	L364
	INC	ESI
	JMP	L351
L397:
	XOR	ESI,ESI
	MOV	EBX,DWORD [36+EBP]
	CMP	ESI,DWORD [32+EBP]
	JGE	L364
L348:
	MOV	ECX,DWORD [8+EBX]
	CMP	ECX,DWORD [4+EBX]
	JE	L364
	MOV	EAX,DWORD [24+EBP]
	MOV	EDX,DWORD [EBX]
	ADD	EAX,DWORD [-20+EBP]
	MOV	DL,BYTE [ECX+EDX*1]
	MOV	BYTE [ESI+EAX*1],DL
	INC	ESI
	INC	DWORD [8+EBX]
	CMP	ESI,DWORD [32+EBP]
	JL	L348
	JMP	L364
L396:
	MOV	EBX,DWORD [36+EBP]
	CMP	DWORD [32+EBP],0
	JNE	L336
	MOV	EAX,DWORD [4+EBX]
	JMP	L367
L336:
	CMP	DWORD [32+EBP],1
	JE	L401
	CMP	DWORD [32+EBP],2
	JNE	L256
	MOV	EAX,DWORD [8+EBX]
	SUB	EAX,DWORD [4+EBX]
	JMP	L367
L401:
	MOV	EAX,DWORD [8+EBX]
	JMP	L367
L395:
	MOV	EBX,DWORD [36+EBP]
	CMP	DWORD [32+EBP],0
	JNE	L327
	MOV	EDX,DWORD [24+EBP]
	MOV	DWORD [8+EBX],EDX
L328:
	CMP	DWORD [8+EBX],0
	JS	L402
L332:
	MOV	EAX,DWORD [4+EBX]
	CMP	DWORD [8+EBX],EAX
	JLE	L256
	MOV	DWORD [8+EBX],EAX
	JMP	L256
L402:
	MOV	DWORD [8+EBX],0
	JMP	L332
L327:
	CMP	DWORD [32+EBP],1
	JE	L403
	CMP	DWORD [32+EBP],2
	JNE	L328
	MOV	EDI,DWORD [4+EBX]
	ADD	DWORD [24+EBP],EDI
	MOV	EAX,DWORD [24+EBP]
	MOV	DWORD [8+EBX],EAX
	JMP	L328
L403:
	MOV	ECX,DWORD [24+EBP]
	ADD	DWORD [8+EBX],ECX
	JMP	L328
L394:
	MOV	EBX,DWORD [36+EBP]
	PUSH	DWORD [4+EBX]
	PUSH	DWORD [EBX]
	PUSH	3932160
	CALL	_memman_free_4k
	MOV	DWORD [EBX],0
L368:
	ADD	ESP,12
	JMP	L256
L393:
	XOR	ESI,ESI
	XOR	EAX,EAX
L320:
	MOV	EDI,DWORD [-16+EBP]
	MOV	EDX,DWORD [176+EDI]
	CMP	DWORD [EDX+EAX*1],0
	JE	L316
	INC	ESI
	ADD	EAX,12
	CMP	ESI,7
	JLE	L320
L316:
	IMUL	EAX,ESI,12
	MOV	DWORD [68+EBP],0
	LEA	EBX,DWORD [EAX+EDX*1]
	CMP	ESI,7
	JG	L256
	MOV	EAX,DWORD [24+EBP]
	PUSH	224
	ADD	EAX,DWORD [-20+EBP]
	PUSH	1058304
	PUSH	EAX
	CALL	_file_search
	ADD	ESP,12
	MOV	EDX,EAX
	TEST	EAX,EAX
	JE	L256
	MOV	DWORD [68+EBP],EBX
	MOV	EAX,DWORD [28+EAX]
	MOV	DWORD [4+EBX],EAX
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [8+EBX],0
	PUSH	DWORD [180+EAX]
	LEA	EAX,DWORD [4+EBX]
	PUSH	EAX
	MOVZX	EAX,WORD [26+EDX]
	PUSH	EAX
	CALL	_file_loadfile2
	MOV	DWORD [EBX],EAX
	JMP	L368
L392:
	MOV	EDX,DWORD [36+EBP]
	TEST	EDX,EDX
	JNE	L311
	PUSH	97
	CALL	_io_in8
	MOV	ESI,EAX
	AND	ESI,13
	PUSH	ESI
	PUSH	97
	CALL	_io_out8
	JMP	L368
L311:
	MOV	ECX,1193180000
	MOV	EBX,EDX
	MOV	EAX,ECX
	PUSH	182
	CDQ
	IDIV	EBX
	PUSH	67
	MOV	ESI,EAX
	CALL	_io_out8
	MOV	EAX,ESI
	SAR	ESI,8
	AND	EAX,255
	PUSH	EAX
	PUSH	66
	CALL	_io_out8
	PUSH	ESI
	PUSH	66
	CALL	_io_out8
	PUSH	97
	CALL	_io_in8
	MOV	ESI,EAX
	OR	ESI,3
	AND	ESI,15
	PUSH	ESI
	PUSH	97
	CALL	_io_out8
	ADD	ESP,36
	JMP	L256
L391:
	PUSH	DWORD [24+EBP]
	CALL	_timer_free
L369:
	POP	EBX
	JMP	L256
L390:
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [24+EBP]
	CALL	_timer_settime
L371:
	POP	ESI
	POP	EDI
	JMP	L256
L389:
	MOV	EAX,DWORD [36+EBP]
	ADD	EAX,256
	PUSH	EAX
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,16
	PUSH	EAX
	PUSH	DWORD [24+EBP]
	CALL	_timer_init
	JMP	L368
L388:
	CALL	_timer_alloc
	MOV	DWORD [68+EBP],EAX
	MOV	BYTE [9+EAX],1
	JMP	L256
L290:
	CALL	_io_cli
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,16
	PUSH	EAX
	CALL	_fifo32_status
	POP	EDX
	TEST	EAX,EAX
	JNE	L293
	CMP	DWORD [36+EBP],0
	JE	L294
	PUSH	DWORD [-16+EBP]
	CALL	_task_sleep
	POP	EAX
L293:
	MOV	EDI,DWORD [-16+EBP]
	ADD	EDI,16
	PUSH	EDI
	CALL	_fifo32_get
	MOV	ESI,EAX
	CALL	_io_sti
	POP	EAX
	CMP	ESI,1
	JLE	L404
L296:
	CMP	ESI,2
	JE	L405
L297:
	CMP	ESI,3
	JE	L406
L298:
	CMP	ESI,4
	JE	L407
L299:
	LEA	EAX,DWORD [-256+ESI]
	CMP	ESI,255
	JG	L367
	JMP	L290
L407:
	PUSH	DWORD [16+EBX]
	CALL	_timer_cancel
	CALL	_io_cli
	MOV	EAX,DWORD [EBX]
	SUB	EAX,DWORD [-24+EBP]
	SUB	EAX,1044
	SAR	EAX,3
	IMUL	EAX,EAX,-858993459
	ADD	EAX,2024
	PUSH	EAX
	PUSH	DWORD [-28+EBP]
	CALL	_fifo32_put
	MOV	DWORD [EBX],0
	CALL	_io_sti
	ADD	ESP,12
	JMP	L299
L406:
	MOV	DWORD [12+EBX],-1
	JMP	L298
L405:
	MOV	DWORD [12+EBX],16777215
	JMP	L297
L404:
	CMP	DWORD [EBX],0
	JE	L296
	PUSH	1
	PUSH	EDI
	PUSH	DWORD [16+EBX]
	CALL	_timer_init
	PUSH	50
	PUSH	DWORD [16+EBX]
	CALL	_timer_settime
	ADD	ESP,20
	JMP	L296
L294:
	CALL	_io_sti
	MOV	DWORD [68+EBP],-1
	JMP	L256
L387:
	PUSH	DWORD [24+EBP]
	CALL	_sheet_free
	JMP	L369
L386:
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	MOV	EDI,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	AND	EDI,-2
	PUSH	EDI
	CALL	_hrb_api_linewin
	ADD	ESP,24
	TEST	DWORD [24+EBP],1
	JNE	L256
	MOV	EAX,DWORD [36+EBP]
	CMP	EAX,DWORD [12+EBP]
	JLE	L284
	MOV	EBX,DWORD [12+EBP]
	MOV	DWORD [12+EBP],EAX
	MOV	DWORD [36+EBP],EBX
L284:
	MOV	EAX,DWORD [8+EBP]
	CMP	DWORD [32+EBP],EAX
	JLE	L285
	MOV	ESI,DWORD [32+EBP]
	MOV	DWORD [32+EBP],EAX
	MOV	DWORD [8+EBP],ESI
L285:
	MOV	EAX,DWORD [8+EBP]
	INC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	INC	EAX
	PUSH	EAX
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
L373:
	PUSH	EDI
L370:
	CALL	_sheet_refresh
L372:
	ADD	ESP,20
	JMP	L256
L385:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [24+EBP]
	JMP	L370
L384:
	MOV	EDI,DWORD [24+EBP]
	MOV	EAX,DWORD [8+EBP]
	AND	EDI,-2
	MOV	EDX,DWORD [36+EBP]
	IMUL	EAX,DWORD [4+EDI]
	ADD	EAX,DWORD [12+EBP]
	MOV	ECX,DWORD [EDI]
	MOV	DWORD [ECX+EAX*4],EDX
	TEST	DWORD [24+EBP],1
	JNE	L256
	MOV	EAX,DWORD [8+EBP]
	INC	EAX
	PUSH	EAX
	MOV	EAX,DWORD [12+EBP]
	INC	EAX
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	JMP	L373
L383:
	MOV	EAX,DWORD [32+EBP]
	ADD	EAX,15
	AND	EAX,-16
	PUSH	EAX
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,DWORD [-20+EBP]
	PUSH	DWORD [36+EBP]
	PUSH	EAX
	CALL	_memman_free
	JMP	L368
L382:
	MOV	EAX,DWORD [32+EBP]
	ADD	EAX,15
	AND	EAX,-16
	PUSH	EAX
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,DWORD [-20+EBP]
	PUSH	EAX
	CALL	_memman_alloc
	MOV	DWORD [68+EBP],EAX
	JMP	L371
L381:
	MOV	EBX,DWORD [24+EBP]
	ADD	EBX,DWORD [-20+EBP]
	PUSH	EBX
	CALL	_memman_init
	AND	DWORD [32+EBP],-16
	PUSH	DWORD [32+EBP]
	PUSH	DWORD [36+EBP]
	PUSH	EBX
	CALL	_memman_free
	ADD	ESP,16
	JMP	L256
L380:
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [32+EBP]
	MOV	EDI,DWORD [24+EBP]
	PUSH	DWORD [36+EBP]
	AND	EDI,-2
	PUSH	DWORD [16+EBP]
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_boxfill8
	ADD	ESP,28
	TEST	DWORD [24+EBP],1
	JNE	L256
	JMP	L285
L379:
	MOV	EAX,DWORD [16+EBP]
	MOV	EDI,DWORD [24+EBP]
	ADD	EAX,DWORD [-20+EBP]
	AND	EDI,-2
	PUSH	EAX
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	DWORD [4+EDI]
	PUSH	DWORD [EDI]
	CALL	_putfonts8_asc
	ADD	ESP,24
	TEST	DWORD [24+EBP],1
	JNE	L256
	MOV	ECX,DWORD [12+EBP]
	MOV	EAX,DWORD [8+EBP]
	MOV	EDX,DWORD [32+EBP]
	ADD	EAX,16
	PUSH	EAX
	LEA	EAX,DWORD [ECX+EDX*8]
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	ECX
	JMP	L373
L378:
	PUSH	DWORD [-24+EBP]
	CALL	_sheet_alloc
	MOV	ECX,DWORD [24+EBP]
	MOV	EDI,EAX
	MOV	EDX,DWORD [-20+EBP]
	MOV	EAX,DWORD [-16+EBP]
	MOV	DWORD [36+EDI],EAX
	LEA	EBX,DWORD [ECX+EDX*4]
	OR	DWORD [28+EDI],16
	PUSH	DWORD [36+EBP]
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	PUSH	EDI
	CALL	_sheet_setbuf
	MOV	EAX,DWORD [32+EBP]
	ADD	EAX,DWORD [-20+EBP]
	PUSH	0
	PUSH	EAX
	PUSH	DWORD [8+EBP]
	PUSH	DWORD [12+EBP]
	PUSH	EBX
	CALL	_make_window8
	MOV	ECX,DWORD [-24+EBP]
	MOV	EBX,DWORD [-24+EBP]
	ADD	ESP,44
	MOV	EAX,DWORD [12+EBX]
	MOV	EBX,2
	SUB	EAX,DWORD [8+EBP]
	CDQ
	IDIV	EBX
	PUSH	EAX
	MOV	EAX,DWORD [8+ECX]
	SUB	EAX,DWORD [12+EBP]
	CDQ
	IDIV	EBX
	AND	EAX,-4
	PUSH	EAX
	PUSH	EDI
	CALL	_sheet_slide
	MOV	EBX,DWORD [-24+EBP]
	PUSH	DWORD [16+EBX]
	PUSH	EDI
	CALL	_sheet_updown
	MOV	DWORD [68+EBP],EDI
	JMP	L372
L377:
	MOV	EAX,DWORD [-16+EBP]
	ADD	EAX,48
	JMP	L254
L376:
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,DWORD [-20+EBP]
	PUSH	DWORD [32+EBP]
	PUSH	EAX
	PUSH	EBX
	CALL	_cons_putstr1
	JMP	L368
L375:
	MOV	EAX,DWORD [24+EBP]
	ADD	EAX,DWORD [-20+EBP]
	PUSH	EAX
	PUSH	EBX
	CALL	_cons_putstr0
	JMP	L371
L374:
	PUSH	1
	MOVZX	EAX,BYTE [36+EBP]
	PUSH	EAX
	PUSH	EBX
	CALL	_cons_putchar
	JMP	L368
[SECTION .data]
LC22:
	DB	0x0A,0xB4,0xED,0xCE,0xF3,0xA3,0xBA,0x0A," ",0xB6,0xD1,0xD5,0xBB,0xD2,0xEC,0xB3,0xA3,0xA3,0xA1,0x0A,0x00
LC23:
	DB	"EIP = %08X",0x0A,0x00
[SECTION .text]
	GLOBAL	_inthandler0c
_inthandler0c:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,32
	CALL	_task_now
	MOV	ESI,EAX
	MOV	EDI,DWORD [164+EAX]
	ADD	ESI,48
	PUSH	LC22
	PUSH	EDI
	CALL	_cons_putstr0
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [44+EAX]
	PUSH	LC23
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr0
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	MOV	EAX,ESI
	POP	ESI
	POP	EDI
	POP	EBP
	RET
[SECTION .data]
LC24:
	DB	0x0A,"INT 0D :",0x0A," General Protected Exception.",0x0A,0x00
[SECTION .text]
	GLOBAL	_inthandler0d
_inthandler0d:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	LEA	EBX,DWORD [-44+EBP]
	SUB	ESP,32
	CALL	_task_now
	MOV	ESI,EAX
	MOV	EDI,DWORD [164+EAX]
	ADD	ESI,48
	PUSH	LC24
	PUSH	EDI
	CALL	_cons_putstr0
	MOV	EAX,DWORD [8+EBP]
	PUSH	DWORD [44+EAX]
	PUSH	LC23
	PUSH	EBX
	CALL	_sprintf
	PUSH	EBX
	PUSH	EDI
	CALL	_cons_putstr0
	LEA	ESP,DWORD [-12+EBP]
	POP	EBX
	MOV	EAX,ESI
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_hrb_api_linewin
_hrb_api_linewin:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	ESI
	PUSH	ESI
	MOV	EDI,DWORD [12+EBP]
	MOV	EAX,DWORD [20+EBP]
	MOV	ECX,EDI
	MOV	EDX,DWORD [24+EBP]
	SAL	ECX,10
	MOV	ESI,EDX
	MOV	DWORD [-16+EBP],ECX
	MOV	EBX,EAX
	MOV	ECX,DWORD [16+EBP]
	SUB	ESI,DWORD [16+EBP]
	SAL	ECX,10
	SUB	EBX,EDI
	MOV	DWORD [-20+EBP],ECX
	JS	L432
L411:
	TEST	ESI,ESI
	JS	L433
L412:
	CMP	EBX,ESI
	JL	L413
	LEA	ECX,DWORD [1+EBX]
	CMP	EDI,EAX
	MOV	EBX,-1024
	JG	L415
	MOV	EBX,1024
L415:
	CMP	DWORD [16+EBP],EDX
	JG	L416
	SUB	EDX,DWORD [16+EBP]
	INC	EDX
L431:
	SAL	EDX,10
	MOV	EAX,EDX
	CDQ
	IDIV	ECX
	MOV	ESI,EAX
L418:
	TEST	ECX,ECX
	JLE	L429
	MOV	EDX,DWORD [8+EBP]
	MOV	EDI,DWORD [EDX]
L427:
	MOV	EAX,DWORD [-20+EBP]
	MOV	EDX,DWORD [8+EBP]
	SAR	EAX,10
	ADD	DWORD [-20+EBP],ESI
	IMUL	EAX,DWORD [4+EDX]
	MOV	EDX,DWORD [-16+EBP]
	ADD	DWORD [-16+EBP],EBX
	SAR	EDX,10
	ADD	EAX,EDX
	MOV	EDX,DWORD [28+EBP]
	DEC	ECX
	MOV	DWORD [EDI+EAX*4],EDX
	JNE	L427
L429:
	POP	ECX
	POP	EBX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
L416:
	SUB	EDX,DWORD [16+EBP]
	DEC	EDX
	JMP	L431
L413:
	LEA	ECX,DWORD [1+ESI]
	CMP	DWORD [16+EBP],EDX
	MOV	ESI,-1024
	JG	L420
	MOV	ESI,1024
L420:
	CMP	EDI,EAX
	JG	L421
	SUB	EAX,EDI
	LEA	EDX,DWORD [1+EAX]
L430:
	SAL	EDX,10
	MOV	EAX,EDX
	CDQ
	IDIV	ECX
	MOV	EBX,EAX
	JMP	L418
L421:
	SUB	EAX,EDI
	LEA	EDX,DWORD [-1+EAX]
	JMP	L430
L433:
	NEG	ESI
	JMP	L412
L432:
	NEG	EBX
	JMP	L411
