	.file	"bootpack.c"
	.data
_keytable0.0:
	.byte	0
	.byte	0
	.byte	49
	.byte	50
	.byte	51
	.byte	52
	.byte	53
	.byte	54
	.byte	55
	.byte	56
	.byte	57
	.byte	48
	.byte	45
	.byte	61
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	91
	.byte	93
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	59
	.byte	39
	.byte	96
	.byte	0
	.byte	92
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	44
	.byte	46
	.byte	47
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	0
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	0
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	92
	.byte	0
	.byte	0
_keytable1.1:
	.byte	0
	.byte	0
	.byte	33
	.byte	64
	.byte	35
	.byte	36
	.byte	37
	.byte	94
	.byte	38
	.byte	42
	.byte	40
	.byte	41
	.byte	95
	.byte	43
	.byte	8
	.byte	0
	.byte	81
	.byte	87
	.byte	69
	.byte	82
	.byte	84
	.byte	89
	.byte	85
	.byte	73
	.byte	79
	.byte	80
	.byte	123
	.byte	125
	.byte	10
	.byte	0
	.byte	65
	.byte	83
	.byte	68
	.byte	70
	.byte	71
	.byte	72
	.byte	74
	.byte	75
	.byte	76
	.byte	58
	.byte	34
	.byte	126
	.byte	0
	.byte	124
	.byte	90
	.byte	88
	.byte	67
	.byte	86
	.byte	66
	.byte	78
	.byte	77
	.byte	60
	.byte	62
	.byte	63
	.byte	0
	.byte	42
	.byte	0
	.byte	32
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	55
	.byte	56
	.byte	57
	.byte	45
	.byte	52
	.byte	53
	.byte	54
	.byte	43
	.byte	49
	.byte	50
	.byte	51
	.byte	48
	.byte	46
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	95
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	124
	.byte	0
	.byte	0
LC3:
	.ascii "\326\334\310\325\0"
LC4:
	.ascii "\326\334\322\273\0"
LC5:
	.ascii "\326\334\266\376\0"
LC6:
	.ascii "\326\334\310\375\0"
LC7:
	.ascii "\326\334\313\304\0"
LC8:
	.ascii "\326\334\316\345\0"
LC9:
	.ascii "\326\334\301\371\0"
	.balign 4
LC10:
	.long	LC3
	.long	LC4
	.long	LC5
	.long	LC6
	.long	LC7
	.long	LC8
	.long	LC9
LC0:
	.ascii "HZK16.fnt\0"
LC11:
	.ascii "%d-%d-%d %s\0"
LC12:
	.ascii "%d:%d\0"
LC1:
	.ascii "\12Break(key) :\12\0"
LC2:
	.ascii "\12Break(mouse) :\12\0"
	.text
	.balign 2
.globl _HariMain
	.def	_HariMain;	.scl	2;	.type	32;	.endef
_HariMain:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%edi
	pushl	%esi
	pushl	%ebx
	leal	-124(%ebp), %esi
	subl	$1916, %esp
	leal	-92(%ebp), %ebx
	movl	$-1, -1856(%ebp)
	movl	$0, -1860(%ebp)
	movl	$2147483647, -1864(%ebp)
	movl	$0, -1868(%ebp)
	movl	$0, -1888(%ebp)
	movb	4081, %al
	sarb	$4, %al
	movl	%eax, %edx
	andl	$7, %edx
	movl	%edx, -1892(%ebp)
	movl	$-1, -1896(%ebp)
	movl	$-1, -1900(%ebp)
	movl	$-1, -1904(%ebp)
	movl	$0, -1908(%ebp)
	movl	$0, -1912(%ebp)
	call	_init_gdtidt
	call	_init_pic
	call	_io_sti
	leal	-636(%ebp), %eax
	pushl	$0
	pushl	%eax
	pushl	$128
	pushl	%ebx
	call	_fifo32_init
	movl	%ebx, 4076
	call	_init_pit
	pushl	$256
	pushl	%ebx
	call	_init_keyboard
	leal	-780(%ebp), %eax
	pushl	%eax
	pushl	$512
	pushl	%ebx
	call	_enable_mouse
	addl	$36, %esp
	pushl	$248
	pushl	$33
	call	_io_out8
	pushl	$239
	pushl	$161
	call	_io_out8
	leal	-764(%ebp), %eax
	pushl	$0
	pushl	%eax
	pushl	$32
	pushl	%esi
	call	_fifo32_init
	addl	$32, %esp
	pushl	$-1073741825
	pushl	$4194304
	call	_memtest
	pushl	$3932160
	movl	%eax, -1872(%ebp)
	call	_memman_init
	pushl	$647168
	pushl	$4096
	pushl	$3932160
	call	_memman_free
	movl	-1872(%ebp), %eax
	subl	$4194304, %eax
	pushl	%eax
	pushl	$4194304
	pushl	$3932160
	call	_memman_free
	addl	$36, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	4088
	pushl	$3932160
	call	_shtctl_init
	pushl	$3932160
	movl	%eax, -1844(%ebp)
	call	_task_init
	pushl	$2
	pushl	$1
	movl	%eax, -1884(%ebp)
	pushl	%eax
	movl	%eax, -68(%ebp)
	call	_task_run
	addl	$32, %esp
	movl	-1884(%ebp), %edx
	movl	-1844(%ebp), %eax
	movl	%eax, 4068
	movb	$2, 188(%edx)
	pushl	%eax
	call	_sheet_alloc
	movswl	4086,%edx
	movl	%eax, -1876(%ebp)
	movswl	4084,%eax
	imull	%edx, %eax
	sall	$2, %eax
	pushl	%eax
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$-1
	movl	%eax, %ebx
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	pushl	-1876(%ebp)
	call	_sheet_setbuf
	addl	$32, %esp
	movswl	4086,%eax
	pushl	%eax
	movswl	4084,%eax
	pushl	%eax
	pushl	%ebx
	leal	-1804(%ebp), %ebx
	call	_init_screen8
	pushl	-1872(%ebp)
	pushl	-1844(%ebp)
	call	_open_console
	pushl	-1844(%ebp)
	movl	%eax, -1916(%ebp)
	call	_sheet_alloc
	pushl	$99
	pushl	$16
	movl	%eax, -1880(%ebp)
	pushl	$16
	pushl	%ebx
	pushl	%eax
	call	_sheet_setbuf
	addl	$44, %esp
	pushl	$99
	pushl	%ebx
	movl	$2, %ebx
	call	_init_mouse_cursor8
	movswl	4084,%eax
	leal	-16(%eax), %ecx
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	movl	%eax, -1848(%ebp)
	movswl	4086,%eax
	pushl	$0
	leal	-44(%eax), %ecx
	pushl	$0
	movl	%ecx, %eax
	cltd
	idivl	%ebx
	pushl	-1876(%ebp)
	movl	%eax, -1852(%ebp)
	call	_sheet_slide
	pushl	$4
	pushl	$32
	pushl	-1916(%ebp)
	call	_sheet_slide
	addl	$32, %esp
	pushl	-1852(%ebp)
	pushl	-1848(%ebp)
	pushl	-1880(%ebp)
	call	_sheet_slide
	pushl	$0
	pushl	-1876(%ebp)
	call	_sheet_updown
	pushl	$1
	pushl	-1916(%ebp)
	call	_sheet_updown
	pushl	$2
	pushl	-1880(%ebp)
	call	_sheet_updown
	addl	$36, %esp
	pushl	-1916(%ebp)
	call	_keywin_on
	pushl	$237
	pushl	%esi
	call	_fifo32_put
	pushl	-1892(%ebp)
	pushl	%esi
	call	_fifo32_put
	pushl	$764832
	pushl	$3932160
	call	_memman_alloc_4k
	pushl	$11520
	pushl	$3932160
	call	_memman_alloc_4k
	addl	$36, %esp
	movl	%eax, %ebx
	pushl	$1049088
	pushl	%eax
	call	_file_readfat
	pushl	$224
	pushl	$1058304
	pushl	$LC0
	call	_file_search
	addl	$20, %esp
	movl	%eax, %edx
	testl	%eax, %eax
	je	L2
	movl	28(%eax), %eax
	pushl	%ebx
	movl	%eax, -1840(%ebp)
	leal	-1840(%ebp), %eax
	pushl	%eax
	movzwl	26(%edx), %eax
	pushl	%eax
	call	_file_loadfile2
	addl	$12, %esp
	movl	%eax, %ecx
L3:
	movl	%ecx, 4072
	pushl	$11520
	pushl	%ebx
	pushl	$3932160
	call	_memman_free_4k
L89:
	addl	$12, %esp
L14:
	leal	-124(%ebp), %ebx
	pushl	%ebx
	call	_fifo32_status
	popl	%edx
	testl	%eax, %eax
	jle	L17
	cmpl	$0, -1896(%ebp)
	js	L92
L17:
	leal	-92(%ebp), %ebx
	call	_io_cli
	pushl	%ebx
	call	_fifo32_status
	popl	%edi
	testl	%eax, %eax
	je	L93
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1840(%ebp)
	call	_io_sti
	popl	%ebx
	cmpl	$0, -1916(%ebp)
	je	L24
	movl	-1916(%ebp), %edx
	cmpl	$0, 28(%edx)
	jne	L24
	movl	-1844(%ebp), %edx
	movl	$0, -1916(%ebp)
	movl	16(%edx), %eax
	cmpl	$1, %eax
	je	L24
	movl	-1844(%ebp), %edx
	movl	16(%edx,%eax,4), %eax
	pushl	%eax
	movl	%eax, -1916(%ebp)
	call	_keywin_on
	popl	%ecx
L24:
	movl	-1840(%ebp), %edx
	leal	-256(%edx), %eax
	cmpl	$255, %eax
	ja	L27
	cmpl	$383, %edx
	jg	L28
	cmpl	$0, -1888(%ebp)
	jne	L29
	movb	_keytable0.0-256(%edx), %al
L90:
	movb	%al, -60(%ebp)
L31:
	movb	-60(%ebp), %dl
	leal	-65(%edx), %eax
	cmpb	$25, %al
	ja	L32
	testl	$4, -1892(%ebp)
	jne	L87
	cmpl	$0, -1888(%ebp)
	je	L34
L32:
	movb	-60(%ebp), %al
	testb	%al, %al
	je	L36
	cmpl	$0, -1916(%ebp)
	je	L36
	movsbl	%al,%eax
	movl	-1916(%ebp), %edx
	addl	$256, %eax
	pushl	%eax
	movl	36(%edx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
L36:
	cmpl	$271, -1840(%ebp)
	je	L94
L37:
	movl	-1840(%ebp), %eax
	cmpl	$298, %eax
	je	L95
L39:
	cmpl	$310, %eax
	je	L96
L40:
	cmpl	$426, %eax
	je	L97
L41:
	cmpl	$438, %eax
	je	L98
L42:
	cmpl	$314, %eax
	je	L99
L43:
	cmpl	$325, -1840(%ebp)
	je	L100
L44:
	cmpl	$326, -1840(%ebp)
	je	L101
L45:
	cmpl	$315, -1840(%ebp)
	je	L102
L46:
	cmpl	$316, -1840(%ebp)
	je	L103
L48:
	cmpl	$343, -1840(%ebp)
	je	L104
L50:
	movl	-1840(%ebp), %eax
	cmpl	$506, %eax
	je	L105
L51:
	cmpl	$510, %eax
	je	L106
L53:
	cld
	leal	-1836(%ebp), %edi
	movl	$LC10, %esi
	movl	$7, %ecx
	leal	-60(%ebp), %ebx
	rep
	movsl
	call	_get_day_of_week
	pushl	-1836(%ebp,%eax,4)
	call	_get_day_of_month
	pushl	%eax
	call	_get_mon_hex
	pushl	%eax
	call	_get_year
	pushl	%eax
	pushl	$LC11
	pushl	%ebx
	call	_sprintf
	pushl	$15
	pushl	%ebx
	pushl	$16119285
	pushl	$0
	movswl	4086,%eax
	subl	$20, %eax
	pushl	%eax
	movswl	4084,%eax
	subl	$180, %eax
	pushl	%eax
	pushl	-1876(%ebp)
	call	_putfonts8_asc_sht
	addl	$52, %esp
	call	_get_min_hex
	pushl	%eax
	call	_get_hour_hex
	pushl	%eax
	pushl	$LC12
	pushl	%ebx
	call	_sprintf
	pushl	$5
	pushl	%ebx
	pushl	$16119285
	pushl	$0
	movswl	4086,%eax
	subl	$20, %eax
	pushl	%eax
	movswl	4084,%eax
	subl	$45, %eax
	pushl	%eax
	pushl	-1876(%ebp)
	call	_putfonts8_asc_sht
	addl	$44, %esp
	movswl	4086,%eax
	subl	$34, %eax
	pushl	%eax
	movswl	4084,%eax
	subl	$5, %eax
	pushl	%eax
	movswl	4086,%eax
	subl	$20, %eax
	pushl	%eax
	movswl	4084,%eax
	subl	$130, %eax
	pushl	%eax
	pushl	-1876(%ebp)
	call	_sheet_refresh
	addl	$20, %esp
	jmp	L14
L106:
	call	_wait_KBC_sendready
	pushl	-1896(%ebp)
	pushl	$96
	call	_io_out8
	popl	%ebx
	popl	%esi
	jmp	L53
L105:
	movl	$-1, -1896(%ebp)
	jmp	L51
L104:
	movl	-1844(%ebp), %edx
	movl	16(%edx), %eax
	decl	%eax
	pushl	%eax
	pushl	24(%edx)
	call	_sheet_updown
	popl	%edi
	popl	%eax
	jmp	L50
L103:
	cmpl	$0, -1888(%ebp)
	je	L48
	cmpl	$0, -1916(%ebp)
	je	L49
	pushl	-1916(%ebp)
	call	_keywin_off
	popl	%eax
L49:
	pushl	-1872(%ebp)
	pushl	-1844(%ebp)
	call	_open_console
	pushl	$4
	pushl	$32
	pushl	%eax
	movl	%eax, -1916(%ebp)
	call	_sheet_slide
	movl	-1844(%ebp), %eax
	pushl	16(%eax)
	pushl	-1916(%ebp)
	call	_sheet_updown
	pushl	-1916(%ebp)
	call	_keywin_on
	addl	$32, %esp
	jmp	L48
L102:
	cmpl	$0, -1888(%ebp)
	je	L46
	cmpl	$0, -1916(%ebp)
	je	L46
	movl	-1916(%ebp), %edx
	movl	36(%edx), %ebx
	testl	%ebx, %ebx
	je	L46
	cmpl	$0, 52(%ebx)
	je	L46
	pushl	$LC1
	pushl	164(%ebx)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%ebx), %eax
	movl	%eax, 84(%ebx)
	movl	$_asm_end_app, 76(%ebx)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%ebx
	call	_task_run
	addl	$20, %esp
	jmp	L46
L101:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$1, -1892(%ebp)
	call	_fifo32_put
	pushl	-1892(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L45
L100:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$2, -1892(%ebp)
	call	_fifo32_put
	pushl	-1892(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L44
L99:
	pushl	$237
	leal	-124(%ebp), %ebx
	pushl	%ebx
	xorl	$4, -1892(%ebp)
	call	_fifo32_put
	pushl	-1892(%ebp)
	pushl	%ebx
	call	_fifo32_put
	addl	$16, %esp
	jmp	L43
L98:
	andl	$-3, -1888(%ebp)
	jmp	L42
L97:
	andl	$-2, -1888(%ebp)
	jmp	L41
L96:
	orl	$2, -1888(%ebp)
	jmp	L40
L95:
	orl	$1, -1888(%ebp)
	jmp	L39
L94:
	cmpl	$0, -1916(%ebp)
	je	L37
	pushl	-1916(%ebp)
	call	_keywin_off
	popl	%eax
	movl	-1916(%ebp), %eax
	movl	24(%eax), %ebx
	decl	%ebx
	jne	L38
	movl	-1844(%ebp), %edx
	movl	16(%edx), %ebx
	decl	%ebx
L38:
	movl	-1844(%ebp), %eax
	movl	20(%eax,%ebx,4), %ebx
	pushl	%ebx
	movl	%ebx, -1916(%ebp)
	call	_keywin_on
	popl	%eax
	jmp	L37
L34:
	leal	32(%edx), %eax
	movb	%al, -60(%ebp)
	jmp	L32
L87:
	cmpl	$0, -1888(%ebp)
	je	L32
	jmp	L34
L29:
	movb	_keytable1.1-256(%edx), %al
	jmp	L90
L28:
	movb	$0, -60(%ebp)
	jmp	L31
L27:
	leal	-512(%edx), %eax
	cmpl	$255, %eax
	ja	L54
	movzbl	-1840(%ebp), %eax
	pushl	%eax
	leal	-780(%ebp), %eax
	pushl	%eax
	call	_mouse_decode
	popl	%edx
	popl	%ecx
	testl	%eax, %eax
	je	L53
	movl	-772(%ebp), %eax
	movl	-776(%ebp), %edx
	addl	%eax, -1852(%ebp)
	addl	%edx, -1848(%ebp)
	js	L107
L56:
	cmpl	$0, -1852(%ebp)
	js	L108
L57:
	movswl	4084,%eax
	decl	%eax
	cmpl	%eax, -1848(%ebp)
	jle	L58
	movl	%eax, -1848(%ebp)
L58:
	movswl	4086,%eax
	decl	%eax
	cmpl	%eax, -1852(%ebp)
	jle	L59
	movl	%eax, -1852(%ebp)
L59:
	movl	-1848(%ebp), %eax
	movl	-1852(%ebp), %edx
	movl	%eax, -1856(%ebp)
	movl	%edx, -1860(%ebp)
	testl	$1, -768(%ebp)
	je	L60
	cmpl	$0, -1900(%ebp)
	js	L109
	movl	-1848(%ebp), %esi
	movl	-1908(%ebp), %eax
	subl	-1900(%ebp), %esi
	movl	-1852(%ebp), %edi
	subl	-1904(%ebp), %edi
	movl	-1852(%ebp), %edx
	leal	2(%esi,%eax), %esi
	movl	%edx, -1904(%ebp)
	movl	%esi, -1864(%ebp)
	addl	%edi, -1868(%ebp)
	andl	$-4, -1864(%ebp)
	jmp	L53
L109:
	movl	-1844(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, %ebx
	movl	%eax, -1924(%ebp)
	decl	%ebx
	testl	%ebx, %ebx
	jle	L53
L73:
	movl	-1844(%ebp), %edx
	movl	-1852(%ebp), %edi
	movl	-1848(%ebp), %esi
	movl	20(%edx,%ebx,4), %edx
	movl	%edx, -1912(%ebp)
	subl	16(%edx), %edi
	subl	12(%edx), %esi
	js	L64
	movl	4(%edx), %eax
	cmpl	%eax, %esi
	jge	L64
	testl	%edi, %edi
	js	L64
	cmpl	8(%edx), %edi
	jge	L64
	imull	%edi, %eax
	addl	%esi, %eax
	movl	(%edx), %ecx
	movl	%eax, -1928(%ebp)
	movl	20(%edx), %edx
	movl	-1928(%ebp), %eax
	cmpl	%edx, (%ecx,%eax,4)
	jne	L110
L64:
	decl	%ebx
	testl	%ebx, %ebx
	jg	L73
	jmp	L53
L110:
	movl	-1924(%ebp), %eax
	decl	%eax
	pushl	%eax
	pushl	-1912(%ebp)
	call	_sheet_updown
	movl	-1916(%ebp), %edx
	popl	%ebx
	cmpl	%edx, -1912(%ebp)
	popl	%eax
	je	L68
	pushl	%edx
	call	_keywin_off
	movl	-1912(%ebp), %eax
	pushl	%eax
	movl	%eax, -1916(%ebp)
	call	_keywin_on
	popl	%edx
	popl	%ecx
L68:
	cmpl	$2, %esi
	jle	L69
	movl	-1912(%ebp), %edx
	movl	4(%edx), %eax
	subl	$3, %eax
	cmpl	%eax, %esi
	jge	L69
	cmpl	$2, %edi
	jle	L69
	cmpl	$20, %edi
	jg	L69
	movl	-1848(%ebp), %eax
	movl	-1852(%ebp), %edx
	movl	%eax, -1900(%ebp)
	movl	%edx, -1904(%ebp)
	movl	-1912(%ebp), %eax
	movl	-1912(%ebp), %edx
	movl	12(%eax), %eax
	movl	16(%edx), %edx
	movl	%eax, -1908(%ebp)
	movl	%edx, -1868(%ebp)
L69:
	movl	-1912(%ebp), %eax
	movl	4(%eax), %edx
	leal	-21(%edx), %eax
	cmpl	%esi, %eax
	jg	L53
	leal	-5(%edx), %eax
	cmpl	%eax, %esi
	jge	L53
	cmpl	$4, %edi
	jle	L53
	cmpl	$18, %edi
	jg	L53
	movl	-1912(%ebp), %edx
	testb	$16, 28(%edx)
	jne	L88
	movl	36(%edx), %ebx
	pushl	$-1
	pushl	%edx
	call	_sheet_updown
	pushl	-1916(%ebp)
	call	_keywin_off
	movl	-1844(%ebp), %edx
	movl	16(%edx), %eax
	movl	16(%edx,%eax,4), %eax
	pushl	%eax
	movl	%eax, -1916(%ebp)
	call	_keywin_on
	call	_io_cli
	leal	16(%ebx), %eax
	pushl	$4
	pushl	%eax
	call	_fifo32_put
	call	_io_sti
	addl	$24, %esp
	jmp	L53
L88:
	movl	-1912(%ebp), %eax
	movl	36(%eax), %ebx
	pushl	$LC2
	pushl	164(%ebx)
	call	_cons_putstr0
	call	_io_cli
	leal	48(%ebx), %eax
	movl	%eax, 84(%ebx)
	movl	$_asm_end_app, 76(%ebx)
	call	_io_sti
	pushl	$0
	pushl	$-1
	pushl	%ebx
	call	_task_run
	addl	$20, %esp
	jmp	L53
L60:
	movl	$-1, -1900(%ebp)
	cmpl	$2147483647, -1864(%ebp)
	je	L53
	pushl	-1868(%ebp)
	pushl	-1864(%ebp)
	pushl	-1912(%ebp)
	call	_sheet_slide
	addl	$12, %esp
	movl	$2147483647, -1864(%ebp)
	jmp	L53
L108:
	movl	$0, -1852(%ebp)
	jmp	L57
L107:
	movl	$0, -1848(%ebp)
	jmp	L56
L54:
	leal	-768(%edx), %eax
	cmpl	$255, %eax
	ja	L78
	imull	$40, %edx, %eax
	movl	-1844(%ebp), %edx
	leal	-29676(%eax,%edx), %eax
	pushl	%eax
	call	_close_console
L91:
	popl	%eax
	jmp	L53
L78:
	leal	-1024(%edx), %eax
	cmpl	$999, %eax
	ja	L80
	imull	$192, %edx, %edx
	addl	_taskctl, %edx
	leal	-192520(%edx), %eax
	pushl	%eax
	call	_close_constask
	jmp	L91
L80:
	leal	-2024(%edx), %eax
	cmpl	$255, %eax
	ja	L53
	imull	$40, %edx, %eax
	addl	-1844(%ebp), %eax
	pushl	$42240
	pushl	-79916(%eax)
	pushl	$3932160
	leal	-79916(%eax), %ebx
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	addl	$16, %esp
	jmp	L53
L93:
	cmpl	$0, -1856(%ebp)
	jns	L111
	cmpl	$2147483647, -1864(%ebp)
	jne	L112
	pushl	-1884(%ebp)
	call	_task_sleep
	call	_io_sti
	popl	%esi
	jmp	L14
L112:
	call	_io_sti
	pushl	-1868(%ebp)
	pushl	-1864(%ebp)
	pushl	-1912(%ebp)
	call	_sheet_slide
	movl	$2147483647, -1864(%ebp)
	jmp	L89
L111:
	call	_io_sti
	pushl	-1860(%ebp)
	pushl	-1856(%ebp)
	pushl	-1880(%ebp)
	call	_sheet_slide
	movl	$-1, -1856(%ebp)
	jmp	L89
L92:
	pushl	%ebx
	call	_fifo32_get
	movl	%eax, -1896(%ebp)
	call	_wait_KBC_sendready
	pushl	-1896(%ebp)
	pushl	$96
	call	_io_out8
	addl	$12, %esp
	jmp	L17
L2:
	pushl	$145472
	pushl	$3932160
	call	_memman_alloc_4k
	xorl	%edx, %edx
	popl	%esi
	movl	%eax, %ecx
	movl	$0, -1840(%ebp)
	popl	%edi
L8:
	movb	_hankaku(%edx), %al
	movb	%al, (%edx,%ecx)
	movl	-1840(%ebp), %eax
	incl	%eax
	movl	%eax, -1840(%ebp)
	movl	%eax, %edx
	cmpl	$4095, %eax
	jle	L8
	movl	$4096, -1840(%ebp)
	movl	$4096, %eax
L13:
	movb	$-1, (%eax,%ecx)
	movl	-1840(%ebp), %eax
	incl	%eax
	movl	%eax, -1840(%ebp)
	cmpl	$145471, %eax
	jle	L13
	jmp	L3
	.balign 2
.globl _keywin_off
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
_keywin_off:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$0
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L115
L113:
	movl	-4(%ebp), %ebx
	leave
	ret
L115:
	pushl	$3
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L113
	.balign 2
.globl _keywin_on
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
_keywin_on:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	pushl	$1
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_change_wtitle8
	testb	$32, 28(%ebx)
	popl	%ecx
	popl	%eax
	jne	L118
L116:
	movl	-4(%ebp), %ebx
	leave
	ret
L118:
	pushl	$2
	movl	36(%ebx), %eax
	addl	$16, %eax
	pushl	%eax
	call	_fifo32_put
	popl	%eax
	popl	%edx
	jmp	L116
	.balign 2
.globl _open_constask
	.def	_open_constask;	.scl	2;	.type	32;	.endef
_open_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	call	_task_alloc
	pushl	$512
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$65536
	pushl	$3932160
	movl	%eax, %esi
	call	_memman_alloc_4k
	movl	8(%ebp), %edx
	movl	$_console_task, 76(%ebx)
	movl	%eax, 172(%ebx)
	addl	$65524, %eax
	movl	%eax, 100(%ebx)
	movl	$8, 116(%ebx)
	movl	$16, 120(%ebx)
	movl	$8, 124(%ebx)
	movl	$8, 128(%ebx)
	movl	$8, 132(%ebx)
	movl	$8, 136(%ebx)
	movl	%edx, 4(%eax)
	movl	100(%ebx), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	pushl	$2
	pushl	$2
	pushl	%ebx
	call	_task_run
	leal	16(%ebx), %eax
	pushl	%ebx
	pushl	%esi
	pushl	$128
	pushl	%eax
	call	_fifo32_init
	leal	-8(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.data
LC13:
	.ascii "PoJos -Command\0"
	.text
	.balign 2
.globl _open_console
	.def	_open_console;	.scl	2;	.type	32;	.endef
_open_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	pushl	8(%ebp)
	call	_sheet_alloc
	pushl	$251475
	pushl	$3932160
	movl	%eax, %ebx
	call	_memman_alloc_4k
	pushl	$255
	pushl	$479
	movl	%eax, %esi
	pushl	$525
	pushl	%eax
	pushl	%ebx
	call	_sheet_setbuf
	addl	$32, %esp
	pushl	$0
	pushl	$LC13
	pushl	$479
	pushl	$525
	pushl	%esi
	call	_make_window8
	pushl	$0
	pushl	$452
	pushl	$519
	pushl	$24
	pushl	$3
	pushl	%ebx
	call	_make_textbox8
	addl	$44, %esp
	pushl	12(%ebp)
	pushl	%ebx
	call	_open_constask
	orl	$32, 28(%ebx)
	movl	%eax, 36(%ebx)
	leal	-8(%ebp), %esp
	movl	%ebx, %eax
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
	.balign 2
.globl _close_constask
	.def	_close_constask;	.scl	2;	.type	32;	.endef
_close_constask:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%ebx
	movl	8(%ebp), %ebx
	pushl	%ebx
	call	_task_sleep
	pushl	$65536
	pushl	172(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	$512
	pushl	16(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	movl	$0, 4(%ebx)
	movl	-4(%ebp), %ebx
	leave
	ret
	.balign 2
.globl _close_console
	.def	_close_console;	.scl	2;	.type	32;	.endef
_close_console:
	pushl	%ebp
	movl	%esp, %ebp
	pushl	%esi
	pushl	%ebx
	movl	8(%ebp), %ebx
	movl	36(%ebx), %esi
	pushl	$168960
	pushl	(%ebx)
	pushl	$3932160
	call	_memman_free_4k
	pushl	%ebx
	call	_sheet_free
	movl	%esi, 8(%ebp)
	addl	$16, %esp
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	jmp	_close_constask
	.def	_make_textbox8;	.scl	2;	.type	32;	.endef
	.def	_make_window8;	.scl	2;	.type	32;	.endef
	.def	_console_task;	.scl	2;	.type	32;	.endef
	.def	_task_alloc;	.scl	2;	.type	32;	.endef
	.def	_change_wtitle8;	.scl	2;	.type	32;	.endef
	.def	_sheet_refresh;	.scl	2;	.type	32;	.endef
	.def	_get_min_hex;	.scl	2;	.type	32;	.endef
	.def	_get_hour_hex;	.scl	2;	.type	32;	.endef
	.def	_putfonts8_asc_sht;	.scl	2;	.type	32;	.endef
	.def	_get_day_of_week;	.scl	2;	.type	32;	.endef
	.def	_get_day_of_month;	.scl	2;	.type	32;	.endef
	.def	_get_mon_hex;	.scl	2;	.type	32;	.endef
	.def	_get_year;	.scl	2;	.type	32;	.endef
	.def	_sprintf;	.scl	2;	.type	32;	.endef
	.def	_sheet_free;	.scl	2;	.type	32;	.endef
	.def	_close_constask;	.scl	2;	.type	32;	.endef
	.def	_close_console;	.scl	2;	.type	32;	.endef
	.def	_mouse_decode;	.scl	2;	.type	32;	.endef
	.def	_asm_end_app;	.scl	2;	.type	32;	.endef
	.def	_cons_putstr0;	.scl	2;	.type	32;	.endef
	.def	_keywin_off;	.scl	2;	.type	32;	.endef
	.def	_task_sleep;	.scl	2;	.type	32;	.endef
	.def	_io_cli;	.scl	2;	.type	32;	.endef
	.def	_wait_KBC_sendready;	.scl	2;	.type	32;	.endef
	.def	_fifo32_get;	.scl	2;	.type	32;	.endef
	.def	_fifo32_status;	.scl	2;	.type	32;	.endef
	.def	_memman_free_4k;	.scl	2;	.type	32;	.endef
	.def	_file_loadfile2;	.scl	2;	.type	32;	.endef
	.def	_file_search;	.scl	2;	.type	32;	.endef
	.def	_file_readfat;	.scl	2;	.type	32;	.endef
	.def	_fifo32_put;	.scl	2;	.type	32;	.endef
	.def	_keywin_on;	.scl	2;	.type	32;	.endef
	.def	_sheet_updown;	.scl	2;	.type	32;	.endef
	.def	_sheet_slide;	.scl	2;	.type	32;	.endef
	.def	_init_mouse_cursor8;	.scl	2;	.type	32;	.endef
	.def	_open_console;	.scl	2;	.type	32;	.endef
	.def	_init_screen8;	.scl	2;	.type	32;	.endef
	.def	_sheet_setbuf;	.scl	2;	.type	32;	.endef
	.def	_memman_alloc_4k;	.scl	2;	.type	32;	.endef
	.def	_sheet_alloc;	.scl	2;	.type	32;	.endef
	.def	_task_run;	.scl	2;	.type	32;	.endef
	.def	_task_init;	.scl	2;	.type	32;	.endef
	.def	_shtctl_init;	.scl	2;	.type	32;	.endef
	.def	_memman_free;	.scl	2;	.type	32;	.endef
	.def	_memman_init;	.scl	2;	.type	32;	.endef
	.def	_memtest;	.scl	2;	.type	32;	.endef
	.def	_io_out8;	.scl	2;	.type	32;	.endef
	.def	_enable_mouse;	.scl	2;	.type	32;	.endef
	.def	_init_keyboard;	.scl	2;	.type	32;	.endef
	.def	_init_pit;	.scl	2;	.type	32;	.endef
	.def	_fifo32_init;	.scl	2;	.type	32;	.endef
	.def	_io_sti;	.scl	2;	.type	32;	.endef
	.def	_init_pic;	.scl	2;	.type	32;	.endef
	.def	_init_gdtidt;	.scl	2;	.type	32;	.endef
