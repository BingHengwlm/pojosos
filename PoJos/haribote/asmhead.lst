     1 00000000                                 ; haribote-os boot asm
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [INSTRSET "i486p"]
     5 00000000                                 
     6  = 00000115                              VBEMODE EQU 	0x0115			; 1024 x  768 x 8bitカラー
     7 00000000                                 ; （画面モード一覧）
     8 00000000                                 ;	0x100 :  640 x  400 x 8bitカラー
     9 00000000                                 ;	0x101 :  640 x  480 x 8bitカラー
    10 00000000                                 ;	0x103 :  800 x  600 x 8bitカラー
    11 00000000                                 ;	0x105 : 1024 x  768 x 8bitカラー
    12 00000000                                 ;	0x107 : 1280 x 1024 x 8bitカラー
    13 00000000                                 
    14  = 00280000                              BOTPAK	EQU		0x00280000		; bootpackのロード先
    15  = 00100000                              DSKCAC	EQU		0x00100000		; ディスクキャッシュの場所
    16  = 00008000                              DSKCAC0	EQU		0x00008000		; ディスクキャッシュの場所（リアルモード）
    17 00000000                                 
    18 00000000                                 ; BOOT_INFO関係
    19  = 00000FF0                              CYLS	EQU		0x0ff0			; ブートセクタが設定する
    20  = 00000FF1                              LEDS	EQU		0x0ff1
    21  = 00000FF2                              VMODE	EQU		0x0ff2			; 色数に関する情報。何ビットカラーか？
    22  = 00000FF4                              SCRNX	EQU		0x0ff4			; 解像度のX
    23  = 00000FF6                              SCRNY	EQU		0x0ff6			; 解像度のY
    24  = 00000FF8                              VRAM	EQU		0x0ff8			; グラフィックバッファの開始番地
    25 00000000                                 
    26                                          		ORG		0xc200			; このプログラムがどこに読み込まれるのか
    27 0000C200                                 
    28 0000C200                                 ; VBE存在確認
    29 0000C200                                 
    30 0000C200 B8 9000                         		MOV		AX,0x9000
    31 0000C203 8E C0                           		MOV		ES,AX
    32 0000C205 BF 0000                         		MOV		DI,0
    33 0000C208 B8 4F00                         		MOV		AX,0x4f00
    34 0000C20B CD 10                           		INT		0x10
    35 0000C20D 3D 004F                         		CMP		AX,0x004f
    36 0000C210 75 37                           		JNE		scrn320
    37 0000C212                                 
    38 0000C212                                 ; VBEのバージョンチェック
    39 0000C212                                 
    40 0000C212 26 8B 45 04                     		MOV		AX,[ES:DI+4]
    41 0000C216 3D 0200                         		CMP		AX,0x0200
    42 0000C219 72 2E                           		JB		scrn320			; if (AX < 0x0200) goto scrn320
    43 0000C21B                                 
    44 0000C21B                                 ; 画面モード情報を得る
    45 0000C21B                                 
    46 0000C21B B9 0115                         		MOV		CX,VBEMODE
    47 0000C21E B8 4F01                         		MOV		AX,0x4f01
    48 0000C221 CD 10                           		INT		0x10
    49 0000C223                                 ;
    50 0000C223                                 ;		CMP		AX,0x004f
    51 0000C223                                 ;		JNE		scrn320
    52 0000C223                                 
    53 0000C223                                 ; 画面モード情報の確認
    54 0000C223                                 
    55 0000C223                                 ;		CMP		BYTE [ES:DI+0x19],8
    56 0000C223                                 ;		JNE		scrn320
    57 0000C223                                 ;		CMP		BYTE [ES:DI+0x1b],4
    58 0000C223                                 ;		JNE		scrn320
    59 0000C223                                 ;		MOV		AX,[ES:DI+0x00]
    60 0000C223                                 ;		AND		AX,0x0080
    61 0000C223                                 ;		JZ		scrn320			; モード属性のbit7が0だったのであきらめる
    62 0000C223                                 
    63 0000C223                                 ; 画面モードの切り替え
    64 0000C223                                 ;
    65 0000C223 BB 4115                         		MOV		BX,VBEMODE+0x4000
    66 0000C226 B8 4F02                         		MOV		AX,0x4f02
    67 0000C229 CD 10                           		INT		0x10
    68 0000C22B C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
    69 0000C230 26 8B 45 12                     		MOV		AX,[ES:DI+0x12]
    70 0000C234 A3 0FF4                         		MOV		[SCRNX],AX
    71 0000C237 26 8B 45 14                     		MOV		AX,[ES:DI+0x14]
    72 0000C23B A3 0FF6                         		MOV		[SCRNY],AX
    73 0000C23E 66 26 8B 45 28                  		MOV		EAX,[ES:DI+0x28]
    74 0000C243 66 A3 0FF8                      		MOV		[VRAM],EAX
    75 0000C247 EB 20                           		JMP		keystatus
    76 0000C249                                 
    77 0000C249                                 scrn320:
    78 0000C249 B0 13                           		MOV		AL,0x13			; VGAグラフィックス、320x200x8bitカラー
    79 0000C24B B4 00                           		MOV		AH,0x00
    80 0000C24D CD 10                           		INT		0x10
    81 0000C24F C6 06 0FF2 08                   		MOV		BYTE [VMODE],8	; 画面モードをメモする（C言語が参照する）
    82 0000C254 C7 06 0FF4 0140                 		MOV		WORD [SCRNX],320
    83 0000C25A C7 06 0FF6 00C8                 		MOV		WORD [SCRNY],200
    84 0000C260 66 C7 06 0FF8 000A0000          		MOV		DWORD [VRAM],0x000a0000
    85 0000C269                                 
    86 0000C269                                 ; キーボードのLED状態をBIOSに教えてもらう
    87 0000C269                                 
    88 0000C269                                 keystatus:
    89 0000C269 B4 02                           		MOV		AH,0x02
    90 0000C26B CD 16                           		INT		0x16 			; keyboard BIOS
    91 0000C26D A2 0FF1                         		MOV		[LEDS],AL
    92 0000C270                                 
    93 0000C270                                 ; PICが一切の割り込みを受け付けないようにする
    94 0000C270                                 ;	AT互換機の仕様では、PICの初期化をするなら、
    95 0000C270                                 ;	こいつをCLI前にやっておかないと、たまにハングアップする
    96 0000C270                                 ;	PICの初期化はあとでやる
    97 0000C270                                 
    98 0000C270 B0 FF                           		MOV		AL,0xff
    99 0000C272 E6 21                           		OUT		0x21,AL
   100 0000C274 90                              		NOP						; OUT命令を連続させるとうまくいかない機種があるらしいので
   101 0000C275 E6 A1                           		OUT		0xa1,AL
   102 0000C277                                 
   103 0000C277 FA                              		CLI						; さらにCPUレベルでも割り込み禁止
   104 0000C278                                 
   105 0000C278                                 ; CPUから1MB以上のメモリにアクセスできるように、A20GATEを設定
   106 0000C278                                 
   107 0000C278 E8 00B5                         		CALL	waitkbdout
   108 0000C27B B0 D1                           		MOV		AL,0xd1
   109 0000C27D E6 64                           		OUT		0x64,AL
   110 0000C27F E8 00AE                         		CALL	waitkbdout
   111 0000C282 B0 DF                           		MOV		AL,0xdf			; enable A20
   112 0000C284 E6 60                           		OUT		0x60,AL
   113 0000C286 E8 00A7                         		CALL	waitkbdout
   114 0000C289                                 
   115 0000C289                                 ; プロテクトモード移行
   116 0000C289                                 
   117 0000C289 0F 01 16 C36A                   		LGDT	[GDTR0]			; 暫定GDTを設定
   118 0000C28E 0F 20 C0                        		MOV		EAX,CR0
   119 0000C291 66 25 7FFFFFFF                  		AND		EAX,0x7fffffff	; bit31を0にする（ページング禁止のため）
   120 0000C297 66 83 C8 01                     		OR		EAX,0x00000001	; bit0を1にする（プロテクトモード移行のため）
   121 0000C29B 0F 22 C0                        		MOV		CR0,EAX
   122 0000C29E EB 00                           		JMP		pipelineflush
   123 0000C2A0                                 pipelineflush:
   124 0000C2A0 B8 0008                         		MOV		AX,1*8			;  読み書き可能セグメント32bit
   125 0000C2A3 8E D8                           		MOV		DS,AX
   126 0000C2A5 8E C0                           		MOV		ES,AX
   127 0000C2A7 8E E0                           		MOV		FS,AX
   128 0000C2A9 8E E8                           		MOV		GS,AX
   129 0000C2AB 8E D0                           		MOV		SS,AX
   130 0000C2AD                                 
   131 0000C2AD                                 ; bootpackの転送
   132 0000C2AD                                 
   133 0000C2AD 66 BE 0000C370                  		MOV		ESI,bootpack	; 転送元
   134 0000C2B3 66 BF 00280000                  		MOV		EDI,BOTPAK		; 転送先
   135 0000C2B9 66 B9 00020000                  		MOV		ECX,512*1024/4
   136 0000C2BF E8 0077                         		CALL	memcpy
   137 0000C2C2                                 
   138 0000C2C2                                 ; ついでにディスクデータも本来の位置へ転送
   139 0000C2C2                                 
   140 0000C2C2                                 ; まずはブートセクタから
   141 0000C2C2                                 
   142 0000C2C2 66 BE 00007C00                  		MOV		ESI,0x7c00		; 転送元
   143 0000C2C8 66 BF 00100000                  		MOV		EDI,DSKCAC		; 転送先
   144 0000C2CE 66 B9 00000080                  		MOV		ECX,512/4
   145 0000C2D4 E8 0062                         		CALL	memcpy
   146 0000C2D7                                 
   147 0000C2D7                                 ; 残り全部
   148 0000C2D7                                 
   149 0000C2D7 66 BE 00008200                  		MOV		ESI,DSKCAC0+512	; 転送元
   150 0000C2DD 66 BF 00100200                  		MOV		EDI,DSKCAC+512	; 転送先
   151 0000C2E3 66 B9 00000000                  		MOV		ECX,0
   152 0000C2E9 8A 0E 0FF0                      		MOV		CL,BYTE [CYLS]
   153 0000C2ED 66 69 C9 00001200               		IMUL	ECX,512*18*2/4	; シリンダ数からバイト数/4に変換
   154 0000C2F4 66 81 E9 00000080               		SUB		ECX,512/4		; IPLの分だけ差し引く
   155 0000C2FB E8 003B                         		CALL	memcpy
   156 0000C2FE                                 
   157 0000C2FE                                 ; asmheadでしなければいけないことは全部し終わったので、
   158 0000C2FE                                 ;	あとはbootpackに任せる
   159 0000C2FE                                 
   160 0000C2FE                                 ; bootpackの起動
   161 0000C2FE                                 
   162 0000C2FE 66 BB 00280000                  		MOV		EBX,BOTPAK
   163 0000C304 67 66 8B 4B 10                  		MOV		ECX,[EBX+16]
   164 0000C309 66 83 C1 03                     		ADD		ECX,3			; ECX += 3;
   165 0000C30D 66 C1 E9 02                     		SHR		ECX,2			; ECX /= 4;
   166 0000C311 74 10                           		JZ		skip			; 転送するべきものがない
   167 0000C313 67 66 8B 73 14                  		MOV		ESI,[EBX+20]	; 転送元
   168 0000C318 66 01 DE                        		ADD		ESI,EBX
   169 0000C31B 67 66 8B 7B 0C                  		MOV		EDI,[EBX+12]	; 転送先
   170 0000C320 E8 0016                         		CALL	memcpy
   171 0000C323                                 skip:
   172 0000C323 67 66 8B 63 0C                  		MOV		ESP,[EBX+12]	; スタック初期値
   173 0000C328 66 EA 0000001B 0010             		JMP		DWORD 2*8:0x0000001b
   174 0000C330                                 
   175 0000C330                                 waitkbdout:
   176 0000C330 E4 64                           		IN		 AL,0x64
   177 0000C332 24 02                           		AND		 AL,0x02
   178 0000C334 E4 60                           		IN		 AL,0x60 		; から読み(受信バッファが悪さをしないように)
   179 0000C336 75 F8                           		JNZ		waitkbdout		; ANDの結果が0でなければwaitkbdoutへ
   180 0000C338 C3                              		RET
   181 0000C339                                 
   182 0000C339                                 memcpy:
   183 0000C339 67 66 8B 06                     		MOV		EAX,[ESI]
   184 0000C33D 66 83 C6 04                     		ADD		ESI,4
   185 0000C341 67 66 89 07                     		MOV		[EDI],EAX
   186 0000C345 66 83 C7 04                     		ADD		EDI,4
   187 0000C349 66 83 E9 01                     		SUB		ECX,1
   188 0000C34D 75 EA                           		JNZ		memcpy			; 引き算した結果が0でなければmemcpyへ
   189 0000C34F C3                              		RET
   190 0000C350                                 ; memcpyはアドレスサイズプリフィクスを入れ忘れなければ、ストリング命令でも書ける
   191 0000C350                                 
   192 0000C350                                 		ALIGNB	16
   193 0000C350                                 GDT0:
   194 0000C350 00 00 00 00 00 00 00 00         		RESB	8				; ヌルセレクタ
   195 0000C358 FFFF 0000 9200 00CF             		DW		0xffff,0x0000,0x9200,0x00cf	; 読み書き可能セグメント32bit
   196 0000C360 FFFF 0000 9A28 0047             		DW		0xffff,0x0000,0x9a28,0x0047	; 実行可能セグメント32bit（bootpack用）
   197 0000C368                                 
   198 0000C368 0000                            		DW		0
   199 0000C36A                                 GDTR0:
   200 0000C36A 0017                            		DW		8*3-1
   201 0000C36C 0000C350                        		DD		GDT0
   202 0000C370                                 
   203 0000C370                                 		ALIGNB	16
   204 0000C370                                 bootpack:
